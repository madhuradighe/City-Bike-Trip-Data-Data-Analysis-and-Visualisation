<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201706-citibike-tripdata' inline='true' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201706-citibike-tripdata' name='textscan.1yysu6104h8fe51f3a4ft0zwyfdn'>
            <connection class='textscan' directory='C:/Users/mdighe/Downloads' filename='201706-citibike-tripdata.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1yysu6104h8fe51f3a4ft0zwyfdn' name='201706-citibike-tripdata.csv' table='[201706-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Tripduration (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[tripduration]' peg='0' size='200' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='End Station Id' datatype='integer' name='[end station id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <group caption='Manhatten stations set' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.701221279999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.012342180000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;South St &amp; Whitehall St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.701906999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.013942' />
              <groupfilter function='member' level='[start station name]' member='&quot;Bus Slip &amp; State St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.702550649999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.012723399999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Water - Whitehall Plaza&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.703553769999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.006702270000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.703651819999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.011677969999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broad St &amp; Bridge St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.703799199999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.008386759999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;Old Slip &amp; Front St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.704633340000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.013617060000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; Battery Pl&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.704717700000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.009260269999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.705309540000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.00612572' />
              <groupfilter function='member' level='[start station name]' member='&quot;Front St &amp; Maiden Ln&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.705692540000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.016776849999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Little West St &amp; 1 Pl&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.707064559999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.007318530000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.707179359999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.008873080000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;William St &amp; Pine St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.707872999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.001670000000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Peck Slip &amp; Front St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.708235020000004' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.005300629999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Cliff St &amp; Fulton St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.708346980000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.01713445' />
              <groupfilter function='member' level='[start station name]' member='&quot;West Thames St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.708621440000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.007221560000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;John St &amp; William St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.709056230000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.010433820000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;Liberty St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.709559579999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.006536089999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Fulton St &amp; William St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.710762279999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994003980000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Market St &amp; Cherry St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.711066000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.009446999999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Fulton St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.711174159999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.000165449999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;St James Pl &amp; Pearl St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.711174440000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.996826189999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;Catherine St &amp; Monroe St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.711463639999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.005524269999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Spruce St &amp; Nassau St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.711511999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.015755999999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;South End Ave &amp; Liberty St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.711731069999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991930429999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pike St &amp; Monroe St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.712199060000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.979481480000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Cherry St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.712690420000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987763229999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Madison St &amp; Clinton St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.71273266' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.004607300000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Centre St &amp; Chambers St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.712912240000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.010202340000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Barclay St &amp; Church St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.713079159999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.998511930000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;St James Pl &amp; Oliver St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.713126000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.984843999999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Madison St &amp; Montgomery St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714066670000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.992939109999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pike St &amp; E Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.71413089' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.997046800000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;Division St &amp; Bowery&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714215000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981346000000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Henry St &amp; Grand St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714274869999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.989900250000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Canal St &amp; Rutgers St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714504509999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.00562789' />
              <groupfilter function='member' level='[start station name]' member='&quot;Reade St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.71473993' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.009106270000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Warren St &amp; Church St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714851510000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.011223319999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Murray St &amp; Greenwich St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714948069999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002344820000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Centre St &amp; Worth St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.714978700000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.013012000000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;Murray St &amp; West St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.715337900000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.016583539999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.715595090000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987029500000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Clinton St &amp; Grand St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.715815499999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994223660000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;Forsyth St &amp; Canal St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.716021179999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999743719999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Bayard St &amp; Baxter St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.716058660000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991907589999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Allen St &amp; Hester St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.71622644' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982612059999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.716250080000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.009105899999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Hudson St &amp; Reade St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.716909780000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983837960000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;NYCBS Depot - PIT&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.717227399999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988020840000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Norfolk St &amp; Broome St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.717399729999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.980165549999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Columbia St &amp; Rivington St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.717487519999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.010455399999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Duane St &amp; Greenwich St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.71754834' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.013220689999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;West St &amp; Chambers St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.717571' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.005549000000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Leonard St &amp; Church St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.717821430000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976289390000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Stanton St &amp; Mangin St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.718502110000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983298590000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Rivington St &amp; Ridge St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.718709869999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.009000900000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Harrison St &amp; Hudson St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.718822000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.995959999999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.718939040000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.992662879999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Forsyth St &amp; Broome St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.719105370000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999733370000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Howard St &amp; Centre St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.719115520000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.006666609999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;Franklin St &amp; W Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.719260810000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981780240000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pitt St &amp; Stanton St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.719392259999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002472139999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Lispenard St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.720195760000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.989978249999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;Allen St &amp; Rivington St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.720664419999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.985179770000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.720828339999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977931720000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Avenue D &amp; E 3 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.720873599999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.980857950000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 2 St &amp; Avenue C&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.721100630000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.9919254' />
              <groupfilter function='member' level='[start station name]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.721319000000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.010064999999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.721654809999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002347369999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Grand St &amp; Greene St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.721853789999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.007717790000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Laight St &amp; Hudson St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722054999999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.989110999999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Allen St &amp; Stanton St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722103789999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.997249010000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722174440000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983687790000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 2 St &amp; Avenue B&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722280869999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976687089999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 6 St &amp; Avenue D&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722293460000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991475350000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722437970000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.005664429999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;6 Ave &amp; Canal St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.722992079999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.979954660000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 5 St &amp; Avenue C&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.72317958' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994800119999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Mott St &amp; Prince St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.723627380000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999496010000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Mercer St &amp; Spring St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.723683610000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.975748129999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Avenue D &amp; E 8 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.724055489999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.009659650000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;Watts St &amp; Greenwich St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.724305270000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.996009830000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.724537339999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981854240000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 6 St &amp; Avenue B&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.724677210000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987834129999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.724909850000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.001547020000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;W Broadway &amp; Spring St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.725028760000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990696560000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.725213109999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977687520000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 9 St &amp; Avenue C&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.725806140000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.974224939999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Avenue D &amp; E 12 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.72621788' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983798550000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 7 St &amp; Avenue A&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.726280699999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.989780409999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.727063630000004' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99662137' />
              <groupfilter function='member' level='[start station name]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.72710258' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002970880000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;MacDougal St &amp; Prince St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.727407939999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981420060000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 10 St &amp; Avenue A&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.72743423' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993790250000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Great Jones St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.727714079999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.011295739999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pier 40 - Hudson River Park&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.727791260000004' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.985649449999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.728418599999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987139560000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.728845999999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.008590999999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.72903917' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994046490000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Washington Pl &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.729170250000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.998102309999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.729236499999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990868030000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Cooper Square &amp; E 7 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.729386849999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977724289999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 14 St &amp; Avenue B&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.72953837' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.984267259999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.729553609999996' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.98057249' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 13 St &amp; Avenue A&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.730206610000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99102628' />
              <groupfilter function='member' level='[start station name]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.730380099999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.974750200000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.730385990000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002149880000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.730473089999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.986723780000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.730477469999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999060650000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.731437239999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99490342' />
              <groupfilter function='member' level='[start station name]' member='&quot;University Pl &amp; E 8 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.731724280000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.006744359999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Barrow St &amp; Hudson St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.732218529999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981655570000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 16 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.732232719999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988899570000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.732241190000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.000263939999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.732263979999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.998522050000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.732617869999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991580429999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 11 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.73291553' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.007113840000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.73314259' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.975738809999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.73331967' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.995101320000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.733812190000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.980544210000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 18 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.734011430000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.00293877' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.734231999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.986923000000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.734545670000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990741420000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; E 14 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.734926950000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.992005090000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;University Pl &amp; E 14 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.735238000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.000270999999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.73532427' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.998004190000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.735353979999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.004830909999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Perry St &amp; Bleecker St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.735367060000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987973929999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.735439339999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99453948' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.735876779999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982050270000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.736196700000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.008592070000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Bank St &amp; Washington St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.736245269999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.98473765' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.736494030000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.997043739999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.736502000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.978094720000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.736528890000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.006180259999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Bank St &amp; Hudson St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.737049839999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990092959999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 17 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.737261859999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.992389669999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.737815089999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999946609999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.738176500000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977386620000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.738274279999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987519680000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 20 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.739016909999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002637609999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.73912601' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.979737760000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.739322999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.008118999999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.739355420000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999317829999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.739445000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976805999999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.739713010000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994564049999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.739973540000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.005138729999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 13 St &amp; Hudson St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.740258779999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.984092140000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.740343199999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.989551090000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; E 22 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.740963739999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.986022129999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.740983' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.001701999999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;8 Ave &amp; W 16 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.741443869999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.975360820000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 30 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.741739690000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994155559999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.741776029999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.001497459999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 17 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.742354300000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.989150760000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 24 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.742387870000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99726235' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.742909019999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.97706058' />
              <groupfilter function='member' level='[start station name]' member='&quot;2 Ave &amp; E 31 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.743115549999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982153530000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.743174490000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.003664430000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;9 Ave &amp; W 18 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.743349350000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.006817530000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 16 St &amp; The High Line&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.743453350000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.000040310000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.743943139999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.979660690000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.743954109999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99144871' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.744022999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976056' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.744219000000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971212140000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.744449209999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983035290000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.744751479999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999153620000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.744876339999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.995298849999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.745167700000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.986830769999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 29 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.745497299999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.001971389999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;9 Ave &amp; W 22 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.745712099999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981948290000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 32 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.746200899999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988557229999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 29 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.746524000000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977885000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.746647000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993915000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.746744999999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.007756000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.746919589999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.004518869999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.747348250000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.997235509999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.747659470000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.984907070000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.747803730000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.973441899999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.748548620000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.98808416' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 32 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.748900599999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976048820000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.749012710000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988483950000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;6 Ave &amp; W 33 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.749155999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991600000000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.749370239999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.999233840000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;9 Ave &amp; W 28 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.749717750000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002950350000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.750019860000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.969053009999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 44 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.750181560000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002184270000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.750199950000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990930849999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.75038009' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983389880000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.750585350000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994684820000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;8 Ave &amp; W 31 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.750977110000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987654280000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 36 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.751183869999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971387149999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.751396' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.005225999999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;11 Ave &amp; W 27 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.751550999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993933999999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;8 Ave &amp; W 33 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.751581000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977909999999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pershing Square South&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.751873000000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977705999999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pershing Square North&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.752062309999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981632399999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 40 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.752068620000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.96784384' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.75216528' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.979921939999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.752270940000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.98770571' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 37 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.752554340000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.972826249999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.752957000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.00264' />
              <groupfilter function='member' level='[start station name]' member='&quot;10 Hudson Yards&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.753230979999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.970325169999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.754557310000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.965929759999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.754601100000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971878860000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.75466591' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991381520000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.75500254' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.980144370000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.755102669999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.974986959999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 47 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.75513557' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.986580320000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 41 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.755273070000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983169360000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.755941589999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002116299999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.756014' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.967416' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.756405479999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990026200000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.756458240000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993722219999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 39 St &amp; 9 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.756603589999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.997900900000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.756687210000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982577320000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 45 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.757147580000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.972078359999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.757245679999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.978059139999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7575699' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990985069999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.757632280000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.969305750000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.757973219999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.966033080000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.758923860000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.962262269999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.758984810000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993799690000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.75899656' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.968653979999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.759107' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.959222999999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 60 St &amp; York Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.759291240000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988596509999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.759680850000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.970313660000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.759710800000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.974023110000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.759922619999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976485159999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.760094369999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.994618430000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.760192519999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.991255100000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;9 Ave &amp; W 45 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.760300960000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.99884222' />
              <groupfilter function='member' level='[start station name]' member='&quot;11 Ave &amp; W 41 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.760683270000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.984527290000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 49 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.76087502' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-74.002776679999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.760957560000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.967244669999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.761227400000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.960940219999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 62 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.761329830000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.979820009999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.76227205' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987882049999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.762288259999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983361830000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 51 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.762698819999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993012219999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.763025939999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.972095249999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.763093869999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.978350160000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.763125840000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.965268949999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;3 Ave &amp; E 62 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.763413790000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.996674440000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.763440580000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982681290000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 53 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.76350532' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971092429999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.76370739' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.985161500000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;8 Ave &amp; W 52 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.764397099999996' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.973714650000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.76440023' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.966489769999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.764618370000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987894729999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.764718520000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.962220700000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.765005250000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.95818491' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 68 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.765265399999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981923379999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 56 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.765849410000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.986905059999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.765909360000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976341509999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.766368' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971518000000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 63 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.766638139999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.953482960000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 72 St &amp; York Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.766696709999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990617279999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.766953170000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981693329999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 58 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.76703432' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.956227299999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.767128399999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.962246179999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.767272159999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.993928879999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.767800800000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.96592081' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 67 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.768008889999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.968452810000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.768253999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988639000000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.768736869999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.961199449999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;3 Ave &amp; E 71 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.768973799999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.954822730000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.769155050000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981918410000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 60 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.769157200000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.967034639999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7699426' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.960607120000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;3 Ave &amp; E 72 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.770513000000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988038000000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.771129270000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.957722970000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.771182879999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.964094220000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 72 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.771404259999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.9535166' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 78 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.771521999999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.990540999999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;11 Ave &amp; W 59 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.771638510000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982614280000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 63 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.77224854' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.958421349999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.772460680000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.946820799999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 82 St &amp; East End Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7727966' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.955778010000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.772828169999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.966852759999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 73 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.772838399999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.949892329999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 81 St &amp; York Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.773406600000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977825420000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park West &amp; W 68 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.773763000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.962220880000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 76 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.773768670000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971169889999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;Adventures NYC&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.773913899999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.954395349999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.774528349999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.987537590000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 64 St &amp; West End Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.774667100000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.984705669999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.77492513' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982665659999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 67 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.775186150000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.944460539999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;East End Ave &amp; E 86 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.775369050000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.94803392' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 85 St &amp; York Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.775655409999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.950686149999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.775730340000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.956752600000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.77579377' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976205739999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park West &amp; W 72 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.776321420000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.964273930000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 78 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.776777019999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.959009699999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 81 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.777057499999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.978984749999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.77748046' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.982885940000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.777507030000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.988885879999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.777945299999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.946040999999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 89 St &amp; York Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.778012029999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.954071490000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.778131399999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.960693989999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.778300999999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.948813400000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.778566900000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977549609999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.778626879999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.957720730000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 84 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.77896784' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.973747369999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park West &amp; W 76 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.779668090000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.980930450000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.780183970000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977285330000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.780577989999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.985624310000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.780628399999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.952166700000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7811223' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.949655890000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.781410700000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.95595908' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 88 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7817212' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.945939999999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 94 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.78275' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971369999999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 82 St &amp; Central Park West&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7829391' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.9786517' />
              <groupfilter function='member' level='[start station name]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.783070000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.959389999999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 88 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.783399809999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.980931330000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 78 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.783501600000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.955326999999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 91 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7839636' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.947167300000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;2 Ave &amp; E 96 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.78414472' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.983624919999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.784726749999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.969617150000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park West &amp; W 85 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.784903200000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.950502999999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.784999790000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.972834059999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.785246720000004' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.976673210000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.785785099999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.957481000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 93 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.785920099999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.948602940000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.786258599999996' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.945525790000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;2 Ave &amp; E 99 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.786794700000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977112000000005' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 84 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7869946' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.941648020000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.78720869' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.981281269999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.787721400000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.947283310000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;3 Ave &amp; E 100 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.787801000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.953558999999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.788221300000004' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.970415610000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.78839' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.974699999999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 87 St  &amp; Amsterdam Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.789210500000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.943707840000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;2 Ave  &amp; E 104 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.789252900000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.939562370000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.789485419999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.952429289999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.790179479999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.972889179999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.790254169999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.977183400000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 88 St &amp; West End Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.790305099999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.947557570000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.790482799999999' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.950330679999993' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 102 St &amp; Park Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.791269999999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.964838999999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park W &amp; W 96 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.791811719999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.978602289999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;Riverside Dr &amp; W 89 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.791955700000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.968086999999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.791975999999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.945993000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.792099999999998' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.9739' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 92 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.792255300000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.952499329999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;5 Ave &amp; E 103 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.793296679999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.943208299999995' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.793393000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.963555600000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park West &amp; W 100 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.793433700000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.949450029999994' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.7937704' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971888000000007' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 95 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.794165399999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.974124000000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;West End Ave &amp; W 94 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.795000000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.964500000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.795346000000002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.961860000000001' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park West &amp; W 102 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.796153500000003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.947821450000006' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.796934700000001' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.964341230000002' />
              <groupfilter function='member' level='[start station name]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.797372099999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.970411920000004' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 100 St &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.798185599999996' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.9605909' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 106 St &amp; Central Park West&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.798993699999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.966217380000003' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.799484' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.955613' />
              <groupfilter function='member' level='[start station name]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.799756799999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.962112869999999' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.8008363' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.966449249999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.8013434' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.971145739999997' />
              <groupfilter function='member' level='[start station name]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.8021174' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.968180529999998' />
              <groupfilter function='member' level='[start station name]' member='&quot;West End Ave &amp; W 107 St&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station latitude]' member='40.804212999999997' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station longitude]' member='-73.966991039999996' />
              <groupfilter function='member' level='[start station name]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.413735' group-percentage='0.135678' measure-ordering='alphabetic' measure-percentage='0.450586' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[tripduration]' filter-group='2' included-values='in-range'>
        <min>0</min>
        <max>2700</max>
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Figure a'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' />
          </datasources>
          <datasource-dependencies datasource='federated.07t7k360ojnt271ceyuuc0rt3ep3'>
            <column aggregation='None' datatype='integer' name='[Tripduration (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[tripduration]' peg='0' size='200' />
            </column>
            <column-instance column='[tripduration]' derivation='Count' name='[cnt:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tripduration (bin)]' derivation='None' name='[none:Tripduration (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>2700</max>
          </filter>
          <slices>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:tripduration:qk]</rows>
        <cols>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:Tripduration (bin):qk]</cols>
        <show-full-range>
          <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:Tripduration (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F2223C50-4F99-4F93-97BD-EAC412F87D3B}' />
    </worksheet>
    <worksheet name='Figure b'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07t7k360ojnt271ceyuuc0rt3ep3'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>2700</max>
          </filter>
          <slices>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station longitude:qk]' field-type='quantitative' max='-8215463.4859192139' min='-8251102.6953663332' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station latitude:qk]' field-type='quantitative' max='4984365.3984407652' min='4963666.4685939271' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' />
              <size column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:start station id:qk]' />
              <text column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station latitude:qk]</rows>
        <cols>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{CCA80295-DDCE-45D1-92CA-BB5289B91DB0}' />
    </worksheet>
    <worksheet name='Figure c'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07t7k360ojnt271ceyuuc0rt3ep3'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[Set 1]' />
          <filter class='quantitative' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>2700</max>
          </filter>
          <slices>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[Set 1]</column>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station longitude:qk]' field-type='quantitative' max='-8221262.4081343384' min='-8256901.6175814578' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station latitude:qk]' field-type='quantitative' max='4984768.1013560733' min='4964069.1715092352' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' />
              <size column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:start station id:qk]' />
              <text column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1534254550933838' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station latitude:qk]</rows>
        <cols>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{C6084E12-2BE0-47E0-8F36-5E613CD83EC3}' />
    </worksheet>
    <worksheet name='Figure d'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' />
          </datasources>
          <datasource-dependencies datasource='federated.07t7k360ojnt271ceyuuc0rt3ep3'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[tripduration]' derivation='Stdev' name='[std:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>2700</max>
          </filter>
          <slices>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[std:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[io:Set 1:nk]</rows>
        <cols>([federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk] + [federated.07t7k360ojnt271ceyuuc0rt3ep3].[std:tripduration:qk])</cols>
      </table>
      <simple-id uuid='{4F7367B4-EB68-49A4-9D7B-422983ED4AE8}' />
    </worksheet>
    <worksheet name='Figure e-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07t7k360ojnt271ceyuuc0rt3ep3'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='End Station Id' datatype='integer' name='[end station id]' role='dimension' type='ordinal' />
            <column-instance column='[end station id]' derivation='None' name='[none:end station id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]'>
            <groupfilter function='member' level='[none:end station id:ok]' member='2006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>2692</max>
          </filter>
          <slices>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]</column>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station longitude:qk]' field-type='quantitative' max='-8220526.7457702439' min='-8251343.182304902' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station latitude:qk]' field-type='quantitative' max='4984936.8883810248' min='4967038.9813326951' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' />
              <size column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:start station id:qk]' />
              <text column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95552486181259155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station latitude:qk]</rows>
        <cols>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{13EA435A-0F38-42F3-A532-C4715FAED74D}' />
    </worksheet>
    <worksheet name='Figure e-2 '>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.07t7k360ojnt271ceyuuc0rt3ep3' />
          </datasources>
          <datasource-dependencies datasource='federated.07t7k360ojnt271ceyuuc0rt3ep3'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='CountD' name='[ctd:start station id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='End Station Id' datatype='integer' name='[end station id]' role='dimension' type='ordinal' />
            <column-instance column='[end station id]' derivation='None' name='[none:end station id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Stdev' name='[std:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]'>
            <groupfilter function='member' level='[none:end station id:ok]' member='2006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>2692</max>
          </filter>
          <slices>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]</column>
            <column>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[std:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[ctd:start station id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>([federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk] + ([federated.07t7k360ojnt271ceyuuc0rt3ep3].[std:tripduration:qk] + ([federated.07t7k360ojnt271ceyuuc0rt3ep3].[sum:Number of Records:qk] + [federated.07t7k360ojnt271ceyuuc0rt3ep3].[ctd:start station id:qk])))</cols>
      </table>
      <simple-id uuid='{255D25B5-D6F1-4FC9-83B3-CEF0AE3A1D6E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Figure a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23947451-E2F3-4158-B79D-25C23BFADF89}' />
    </window>
    <window class='worksheet' maximized='true' name='Figure b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:start station id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{2020042A-8593-4252-AA49-1FC8AE3458D3}' />
    </window>
    <window class='worksheet' name='Figure c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:start station id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[Set 1]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{FB3592BA-50AC-464E-B48B-EC7F916F3793}' />
    </window>
    <window class='worksheet' name='Figure d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[io:Set 1:nk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5046B14-3C47-4D4C-80BA-798975FFA093}' />
    </window>
    <window class='worksheet' name='Figure e-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[cnt:start station id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[avg:tripduration:qk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FE8AC6B4-FC9E-4A4B-B4AA-0245A8C47DE4}' />
    </window>
    <window class='worksheet' name='Figure e-2 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:birth year:qk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:end station id:ok]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:start station name:nk]</field>
            <field>[federated.07t7k360ojnt271ceyuuc0rt3ep3].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA8CBB58-BE45-4DF8-8283-8C47D539025E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Figure a' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Figure b' width='192'>
      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
      t/TrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Figure c' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9abAt2VUm9u0hhzPe+4YqlUqloapUKpUkawQZpELQgaBpuxkaTADuCNO4
      HY6wsX+0g4j2LzuC8B9HR0DYRA/GEY62u2m6aRpLDIYGJISEBlBLoFlFlapUAzW9qnr33jPk
      uPf2j51rn5158px75nvfQ1/UjVc37zmZOzPXWnvNiz3//POGc44mGGNgjEFrDQDgnIMxBqXU
      3Gd3Ac45Op0OkiRx17xVYIyBMQbdbhdlWaIsSxhjkJcFGGMwxgAMgAE4Z7C/7AYMDMbMnhfn
      AgyANgZaq2ptsBeHfa+ccfc+jTEQQgCMIcszwACM2TPb/xgYQ8t7t/RxNByCcw6lFJIkcc+C
      rkU/bdBao4329gVjzNxaJOfcPgAPQghwzt0CiRHKspz77K4ghECn00FRFHtjsn3BGOOeVbfb
      xWQygTEGEhraGMBYggSzZLiAHpaeH0Dt5dExAJBSolQKDAyc23eltLKCxPuc+55gkBXhKa0B
      o8ErpmScgXPuCFlKiV7F2GfjkX8mdDtdxHEMxhjG43FNaNJaOecLiZwxdjAGMMZAGw3B6/Qr
      mx+UUsIYg6IoALRx/rfQhP8igyBwx0IZArCSTlcvgKTyIqm45CoA6oTPGXcvlTYZpRRKpWCW
      7KJaaxgYyzCMoSxLxFEMzhXiKIZSJUqlwDlHv9ez16oEJdGDEAK9bhcAUJYl8jyfratiIFrv
      ovtd/xlsDmPs/TYxxwCseiCHxiEfxrZovlDaAfKiAKsYgdQ4koqCMUgmYIxEroqalDzvWpxx
      GBhHTHRMGQUpZPVygaIsobSak/ptUNWOUWpL0FIIMBYizVJHvEIIFEUBzjmmSeKInzGGQAaO
      6ZMkab0GPQNjjNMk/Hs+5Dtvk/5ACwN8C8uhKoIRTDjCl4FEVuTIihxplmLQ67faMm6X4BKG
      GxSqPHc38NUKzjjAaEexDMTAUJQFGBi0mVd53HkqqcwYQyfuIElnRMsZR5ZnKIoCxltnWZY4
      K0YzO8b7/HAwcMKStIUmcWut3TOiY7tWoelZSLGYlK36YyBbnvPct5RSVqc88C6wzFi6DCAd
      UmkNKYR98FpDGY1u0MW40vu11kizFHEcOyYg4iGpT+pEJEOUSqHUZeu9G2Oc1KJ/S1UCBgiE
      BGccZaXrc9aiSzNmGaI6tzN6OUcUhijKElJK9Ls9S6Qd+x0phGM0ADDagPHKSmCAEBKiYiiS
      /m36vK8ybab2nQ9trHq57Py62jHb0KoCXYQXRsrLvxmpipjLsqyek3HM4GAMpkkCxhi63S7S
      NHUS0v55ZjBzzhFICWE4SlVCyADGGCilnGdHG0vcM4+NtAassSqP2wmYlcxMcveytTFQRqEb
      d1CWCpwzSCERhiGCIHDODv/nPCKl9QFAnufI83zh94QQtd1j1wygjRVA5GQQLedXWjmh1YY5
      quOc117YoUDSoiiLmuS7TGCMVQ9bQysreYXgzQ8BAKZJAq0N4ihyTOOjqVIEIqjOJxDIAHmR
      oywLGG2gmXY7JK/WUJSF9eAAkFwgDEPLUJURzjl3QsU3Sv17adt1SZK2Ea1lTMvA4/F4jk7a
      pLB/jV0yQPOZKqPBTf1+NKmoXLTuAEKIOgNIKS9E+pNuWJRl5c6Dk3qHQtN/7f/r1sg4DDfg
      hiH3DLxFEi7NUihVotvpQkqJLMvmrudfSzABow1KXYDDqjm068BYNYSDVcbuTK+O4gjDwXBl
      /dr30KiKkQGr8/s7gTPgq10uTVPrZSpLdy/cM/oXxZN2DWMMSqWg/ecHu0MLbzcyRgNLXK1a
      6xkDkPvzItye9KCLIreEgcpqZ4fZBUifr0nlFpWAYiOl94x8lZEItfqDvaeyxHg6Qb/bQxzH
      NSYgm6ApJUUVhDLGOEIXXFQGb+kMcSkl+r0+et3uSv50Ol9ZFC7o5Qfu6H7DMISUEkEQON3e
      9/j4Ru1FgOIcTUGljQYzzKlCnHEY007PtDtK+uWiiB+wvnNjDJI0dVJRaQ3GuN3y9wBfavvu
      Rbo+MQTpsY1vu+9ybg1GxthC37tSCmejEXq9bo0J/N2j7TqMMbcLAJgj/qPhEGEQthKi1hp5
      niPLMqtaSbvDksRXSoGZ+rWUUs71qZRCnueI49jtAFJKHB0dYTweOzvo0ExATNy261q6UeDV
      uhYZxnEco9PpAADkRRM/AKfLEdE5HdTzYOwSxlgXJGOssWXWXXYk9Xzi9D8LAGEYIMuyVuL3
      X5I2GuPJBL2uZYI0TWuxAD/q7oOO5UXuiJ8xhuFggDAIa2uj90iE7+9oaZpZNykAwTjAjIst
      +CAG6XQ6jiGMMcgy6yYdDoeQUiJNUyRJ4iTpobyGxkvxAObfB2ANX8EFSq0QtLhHoyhy35P7
      TG9YFfTygyDwbJD9ED+BHkCplEsD8NEkDB+CW2lqjVKOvPKfo41JKpWOmHo8HiMMQ3Q7XeR5
      biWx9/k2iaW01XcByxCDfr+K3NaZl4iyDQbruyH93ZB2AmCWthLHsUuRAbB3+9EYY92+jZ2a
      BJUVCBxJlkJgnqZJtfPVxUvhe6TUC/ItO0LY0w5gA0ikyMw8ULSl+6pPm1rCOUdYMWupbPpA
      kiaLmabBBJQ20O10URRFTXo2jUkK4XPGYBhDr9tDr9urGZ8AMJ1Oa+kIc/dc3bHgdbdtU4Xw
      1TJy43LOnesUsLvEeDxGr9dDkiSIoghxHDsvEdkU+0Azwt6NO0DlAqakPGbqQThy93ZbbKVL
      wQAAqoXOlkN2AMj1t2P4en5Rlu4aRODk/VjEBGSUTioDt9/rYzwZL2cC728k/fv9fuUAKGoE
      6Et2cgtLKdHv950k1lqjKAqMx+OFKhRBNJgKQKvhTH/LsgxxHKPX66EsS4zHY0fkZVkiDK3t
      0el0wBjDdDp1QkQIsReVSDXuUUoJGdiUDK2UVf+KAgbWoOfec2wjfgA4XC7qOSiKAnEUuZfL
      GKs4ez9qEAOzPnYvc5IITwjhtso2gnI+ec4huECSJgiDoPaAVzEQlVI4OzuDNhq9nvUS+Wga
      5524UwvoEGGuYpD6f9fGQMNmz/n36O8M/v0LITAYDNzu1el0nB4tpYSqiI/WvC97wGDGuOSR
      S9LE7cSTZIq8yD3PGpyDgnavJhbuANpol3R1CEtfVdmH3U4H00qPFQvC17sCYwxGWW8TRVSN
      mTcM20C+aNKtyZVK53USfPHF3Xmm0ymEkIg946xpkBtjEEVR7frkrVklgut/j4xhY+BSHvx7
      DoIAUkrnGSJHSRAEUEo56U/fOZQBLLlwdgAw28Un04kTXuTYsO8RVQ0Gr+2qPhyF0YvXxkBp
      m1KrqkSjQ4A8Ir1uD1EYQXCx11xxsjEYWM32AHAuExAREZEGUqIo14ueOyapfibTCQBgOBy2
      qlxSylq6CKUgL9upFt43Kp954ytBEDjffxRFbmdJ0xQAkKYper1e7VrT6RTGGBeJ3ido16U8
      qGYQ0gXwqsRAYlJi2DZIeomMMRSqdCejL1ifq1VF9n2DvvErDvAw2wxAoD1A5a+xVCW0NtYw
      BUMURpimSe287uWQMb9kHYD1LGVZhuPjY0gp59IMfPVIKeWKbvxzrHPvHLNoL+cccRw7YqGo
      NXl5GGM4OztzxS8+yCYAcDBvImM2YU8b5mIC/rq00TAAQhkgjuPzGcA/cRtsQtb+b45zjjRN
      l0rfXYJePnkKyItBUdG2dZRlibzKV2JgiDsxDGZqQJv0thWJy92qlFRXliUGg4GL0JLU9xPL
      ptPpVi7HQEpoYxAGIWAM4jiuVYGRuuPHZMiT0rw3/37p+bU9h32AMw7GmcvSdaoo4JwGvs+/
      DZIMiraXTd4HYCYh93VjJOGWufL2Ad8A9CWvHxicC04xBmUMoihEJ45xNhrNfc7fURwTADXX
      roH1zoReygEROqkjPvyA1Db3y8AQhYFTZ3x7g0DRYkqO7Pf7NRohRvGfk69NHIIB6H4Es8lu
      foqKqNZ9dnbmPGdLbYA2cMYhOHfqCBVw7Bq0BZMr7RBoi/hqrZ2hSS+T/vWNXM44+t0ejoZH
      SJJ04ctuMgRjzObVM8pVYQgDqztHUdSq/xPIY5Tn+U6IK4oi573x4x6+TWGMwWQyQVRltPqE
      XRQFkiSpMekhpX8T/tqa75RsmDYsK6OZ0+nITgiE3OlNdjqdWobhPtE0dH3JRxKNCoLa1Ax6
      sHEcoyiKOQ/KymBWR5VCoNfrOeOzbZ2k8+8q0krvlYjfT6H2/02SxDEc7RbkFgXsbk12g9b6
      IO9vEVzqDGbFQ2EYoixLF6toQ40BaipOiy5L0dNClZBC7sRHT1v92dnZ1udahDZCp3+bNhCp
      Qm1Vcc5gFQJpmrog1ng8RqnVSukGLohTFaYMBoM5QUOqDqU17HLXlVKi0+nU1bOG5CZfPuUr
      kQSldAjGWM0IJyYhxrmoHYDsFLp+EAQLA2CEmRu05Y+Ucw0QEc3UAkrM2hbUCmVfeSRtqoz/
      wqWUEELUiNAP5dOLpQdLD1MphdFoBCGE1TG5zVz1Dcmaa847TyAkpBALXw6t1TcqdwEiiKSq
      WPNdl67EUymnO/tOgSRJcHJygqIo5hLtaM2H1P3b4D9vADUmXQT39H2/6eyMjcql6mGZHbkp
      ya02nU63PtcitD0A3/AjPZgIwv+eH3ii7/nQWmM0GtkEtSo7sxt3WhmBpBNln9K2vGh9cRzj
      +Ph4p65FxpjLPRqNRsiyzAW96H601phMJk4F9L1iURRhMpm43XrR+i8Loig613U/FwizkmxG
      6ASKsEVBaL0WW3Y3o5e8T7dnW0DLl8a+9Cdm8I26oihqfX58FcG3IUaVF6jf7yMMQwguIJit
      3rKBNgFZHWOwtcLN7bq5RlrfsOq8tguQV4eQJIlTb2gdWZYhz/Pajkxd+8g1q5Rytc77THxb
      B76TgkDR7GVwT4NXOj55fmwdZYsdwNhO0iMo8LJPw2mRGkPwVSCKB5C0o7+Th2TRuen/x+Mx
      xmObDEcuXQrYkNSn75AevSyCWxQ21rBL9ZBsFx9JkmA0GjmJ35ZOTd4gxpjzq5NxfpEqzyJ0
      u10Mh8Pajr4IzgimqKU22kUJ91WYHscx4jh2kvMQWLZdUxyEc+7aP/rxAT+62xboIpAnxN9F
      /PMQIRdFMade+SiKwqlWu0abm7ksS1fquCgmRLYaMS59Zp00jH3CL14yxqzcZUQCtKUDYDb1
      QTMDydsDB9siiqLadnoILLoPX0WiHYByysMwdN4NrTWCIGhtANW8Bkkdf8eh3CpK7lvGAJTh
      Cey+wGRZkLEZ+POZLwxDFwsgFei8HewiIITAcDhcSyXzEvCrf8hA3FNROr34RZVLu4Sfl+77
      r334ao8v2SjRjL5fFMVc1wx6Vr6xGwSBKyJhjFW9OstaWw5KMmuCvC0XqVPTbkcSlNQwspOI
      ifyo9WWCr8KuAg5YF2jT4FVaIy8Lm/i1o4xQ8q9nWXYQ6R9FEY6OjlpzwV1swFNRgNmLBSyh
      +gEqKgQB2mtR6bt0b1bylzWbqel+9EEuyIuG3wXCd4NSztRllP4AXD30OuCct1XE+mmzNu+9
      3EGKAgVgloWmdwnqfhZFUc3/b4zNKS+1glKl2/18lYgkYTMzlB5wM7hGUtNPICuVmiN+8sU3
      PRRtHquLhL+zUXG86yZxSRkgCIKltlUbJIX+YdoLp3d1kyT9Kbp4CCRJgjAMkVSdjWsBraq7
      sjX8DTjYHEED9QCPTxT0Gf+HdpogCGzXCcxcp3Tto6OjmoFGjDSZTBxTXBZG8JmcvFLAxUR6
      zwNjzEXm14EstYLKZ20kfM62hGLrymwris25vtPpLHSz7QNUqkcRTZLmwCym4at2yuhanxwf
      BsYxyTJMp1N0Oh1rjPUHTnoS00ReySchz3NXVHIRbekXoRk1vyxMuQjdbncj2pQMs17xURCC
      ppjQjmC0geAM2MIlStJ/MplsfI510ev1UBRFzY/u5/IANmW29HzZtovwLFXZGEsErIrg+n/3
      4as9Z6NRdT3juqsF0uY7NQszyG26ryLyTeHvcosCiZcNm7qMOfWzIWkFgyqCCcAYcG6HKJiq
      6GATSRDH8dwUkX3Cz9tZ5rLkjLvSOsaYrY+tqomMqVqZuAdLjGFqag+dj/KjbIG9ch6TyWSC
      s/GoFkPwVSnaqbZFUz3b17n8e74siKJoYdH7eeAMNjOxWVtKgTAG5oao2cqb9V4WeT2SAxm+
      AJxO7euttJYmU8zlNDFmiZzXo8fa2BiBHXVUPyer7IhFo4niKHLPl/Tq6XSKoih2lgriJ/3t
      4jz0/z7oeVwm9yflVW0KiSpcv2gLYZQiISQ0t23B2yKii0CRuaIsbBH6Hh+cb6TRbkNVXn4O
      UO07je8aT81pemnomNYaDPV2IkVZtBJ/GIbodXtzvXym0+nOjN5dED5hkfT3iX/fteHr4Lx0
      5/NQJb2s8EljrJHoVKLVH7g2++892jTaADgVYzgcLn5xFcFLLhBIiVAGbv5VbfdAPZ2BalDp
      2nPEz2z113Bgc1LIjViWJc7OztxooV1I7H0mEwKzXe7QxE9u10VeQynlSvk+i2AHATK2cmYn
      Ywy8UonIM7IKiqKAbfW5/22zmQBHUcygalzVXIPl6WpCijc/V3Lh2qXQ5xidl3EIMYscz6mF
      FcEcDYauiIS8PJPJpNZE6lAu4XVBu/xFSf5Vns2mnh86/zSZQq6b2elSpYHKaDSOMNpA6ojW
      CuZAwRNfRWOMzXVirq3Pfqj1PJxxmMowBuD6e9J5ZwmE84IgjiL0er0ZkyiF6XS697LBXT7f
      i5L8TXumeU9SSvR6vdbUllWhtIbK0s17g84Iwf5OErL9s5teZXfwA1m+B8egUu0WeIsE54AG
      bLMN729gtYa6jsGqiPDR0XFN7/dz73d9Xz6BbMsAzuiv1L22NPJ9oxlsbDLftsRvjEF2dgL8
      u1/aXXNchnqxtQ/BhedOPDza0hb8vy17mDMmMM49KrntIVRqVVOLqHfloN9H4FVZUQeFZt7Q
      rghr19K5KfUvyuPTJP5Op+PqN7aB1hrFI58H/vJzu+0O7U8RJ3DO3YjNfT3IpiE4p+cvtVXO
      XxO5hEtVuhdSqBK62gFkEKCo8n644Oh2urN8oKrbhS8UiPgvYz6Nj4sk/KbLmoKKm04T1VpX
      qqpBlucwUcfu1jtct4P/sqWUWxZPboemyrPNS6Wp7LY1ovZ80AxFngPM9vz39f7RaFSrI/AJ
      /1AE5ts/l5nhfDTXua3aAwBaK2TTCco8B177IPDwj0AqvV534XXh19ReBPzoa2vPT9ZoB7MA
      fnCo2+0CSQLBeNXZ2b4Yg1lBjDG2jJDiEUT8hw4i0e7Y7Fx9WVMagHm7hvKrtkX69DegPvRP
      gbOXgfd8EOwDPwa+zwdBIepJsr+uD00su5dmhzcA7f1gGvCDZEor2zg2jJBk1qi16cLSuVEB
      uCgvrYmK7y+C6JoqIjEE+dgva6Ib7ZbNuQmboCgKqD/+DeDZbwDjE+BTvwm8/CzkKgSwCUTV
      92aaJiiLYuGo+n2gzX227UtmjEEZjSAMEYURynI20aW6AhjjzpvU1lnuIiR/M7Lb/Lepll0W
      0DScdbIONrqO2QMHcM7R7/dRlAWSaXLQqe9ElKs8NFMl+533WXJvHvX7iKuemnkhoJTGNJkC
      zr1qM0gBuEqyi5Kurbsd5rvi+Z6ey8QA26Y4NKG0Ah7+YeDmC04FMtfuhtzHTVMfydFofDAD
      2L+PVR5cm8dqGagTNJ3fGFMrX9TGQDQInmqKLwtxNdUgAHPu4cuwTqA+MndbKK0xmU6hj+9E
      +NP/E3g2gnjh88DTn7LzAWjE/C5A5X6j8XjvyW+EWmDLyzvy/chtD3PVtXU6HUSeHsoYQxxF
      MIMBsixz013AUGsnH4ahKye8yASyZgCwuSu5/KZqrcDFe4v8pmTbwBiDJJ1VBIILhF/7txDP
      fBpAlQy3q1ul9hnTJHH9Jy8CbYZdm+txvRSQ+vc454jCEN1Ox+4MxkCVs0xZqkUGLraaqk3/
      b/rYgVni2aKu2IcGTdHcBdI0RSCka0vDT75p41IAOLCbbU9Ubb6V1kiSaW2a4SGxaNtsI/5V
      7rstFE/Hp0mCm6cnENwm2/mShFUpEdtkK+4aq7h6L4tHaBclosYYZHkGZgCuFcQrz4KNb6J4
      4G9BR0PozlVIvgO9jzHbPx4AxpNxrRj8kGjmkDTX4Lc/XGV91MSryQCqGiBIw7GnaYJet4sk
      TV06hNslqo4UF4FFKs8+U6h3BX8HXRf++y2LEiKbwvzGL8E8/QgQdVB+8D+H+hs/DzBu4wDb
      gnI0lFYo8uLCVJ9lWzxh1SisMWZhd2HOOSbVUGxjDLSy993v9mqfIzvgovXpJi478UspMRgM
      Nn5uVI5KAz7w2X8PfPMrgCqB6QjmI78K9vLT0LK7fSoE59xt82ma4iLftc8Avv+7qcasogq0
      TUT0v398dIzpdIqbpycAgDTPEEaRS5eg71IA7FCjnxat10+FoOKcRVVfF2WwU+HQKm3Nl4EC
      jmSHmvHN+gemZ4g++QtQb/ru7SfF02KttZ1u3TZ9U/iGXtMHvo73h4h32UswxmA8naAoiyr3
      RwBVgUWT0Cnb9NBqB92j3waeunPQ/xOh+MGwiwqIMWbbxrepnKuCWrUbY1wCojEG7K3vA4KZ
      OiUGDExqiOf+fPsdgMLUWTUv6qLSnpsBHgryrPMyiXmWTRUE4Gp6idjjKEKapSiLAtNkOjfR
      nSTuIf3sdO/NLFk6Rrn+jLELy/v3QaNaNwW9b4rN+LUX5vVvAfvJn4P52p+BixLx+NMA19B3
      vm032aBUXnbIdAe6LrDY2PP/tip6vd65erv/orS20eBO3IE2GmWp3KA9/zP7COk3Yx5NVW9R
      q3P6HDHCZej3ua3aRc+Yug8CAD99CcimMNdfA/3aN4O97iGIZ/8M+NKXYHiI/M0/vB0D0EtW
      SkGVaidD89aF/wKbgS9gdV8/SRBqXLvse236fJImCIMQQTTv/vWZc1eMQMRPa/Gb+hJ6vZ5r
      td62JqAeCT90rhK9O875VkEvf/KN61/6xY/D/MGvAHkK3P8OyO/9IYibj0J+4/fBMjviST75
      J9sxAF10miTYhTt1VfjE7evXPvGv63psMtKya48nY/+A+9+8yME4r014988PYCcZoU3iJ/jR
      8CiKXFe8ZS1vLhJ0/W30fsDSoZ/awo1G+dF/A6RVhP7Rz0PmX0YwbHwx6GxnBFO3Z+q7swss
      Mhb9vPamB4OS1doaOq2yLvL6DAaDc18EYwzDwXDmaWr8PctS5I0W537ezbbBJp/42wrH/XPT
      yKbL6vZUVbOxbYKFNLXSb03fGkDzOneYIEB5/1WY+HObMwC1+0jStCYFt4U2GqVWtkVhg+j9
      0aHNF8sZm3WpYKsXfNB5yOuzyneCIMDx8AhStG+geZ7ViN4fqL0tE5zXtJZiD/ucvLkL0Pvl
      cruMAfJsJUkyG/AHBvY9Pw5EXYAL8DuuQg5m19FHPZihBNNnm6lAVKRQVq0+dpFIRy+SGk65
      3vqo69A+gTb1ac64+37TUG1jCN8b0pzUfh6klAsHh/izFOgazbwb3y+/KpqeriZoJ0vTdK4d
      /CGwTho6Captd8MsyxBFEbrdLtI0dWOt8K6/Afb6h4B0Cly5BvWVfwXx/Begr94HdQ8D8BJg
      zGYMQDNuz85Od2r4lqqsEYbSCnEY1eZSUaq1L1XrTFAf9EfnaoMxBmEYbtRgiTE75nUymQDN
      F9l4p35NMK3Xd0Oug0VeHR+7HrC9CrgQYJyhzBfPUQNmVXX+78ta6iyCv3PneW5doM8/BfzW
      L8M8/03gje8E+4G/B3PlVTAAsm/7b+y68qcgnv+nYMaA30jWZwBq85143ObPFt4UjDFIIWtt
      F0WVS0N2Bk2XJOIjYiIGcfW3xjKP4IuNWjKaNym2pvVF1fANEQRQZelardOaaW3aaDDO5rrj
      bUL8vvQPgqBmCzDGWssc17WJ1oWBgQyknYdMbsgF/GcAGMZcqnwURmsTP6nCtMuFYYg0SaB+
      65eBp75uP/TVzwABR3wXAz97BuXr3o/8vu8HYx0AHNAlxAvT9RmABl34nhCl7GRJseV2y5ht
      SVhWLcbjuIcsy5CmKcIwdP75pieFRhN1u13kRY7TszNHjG2D/lYNeC2D3T2s3SCFwJWjY2eA
      USBMG40ky2Y7BENr4911rkmETi3ngyBwdgZgpX8URciyrOYN2yQwuCoYmHWDBzQafOldQJDg
      4RyBXF31NMZmiJ795V9i8icfhx6PED7wJgwe/gAgOPD8E/V1PfoZSG1JPPjab8B074DpvgCg
      rDhxTRUojmM36IKDQcPX+3bXl56DQcjZMLpOp+PmfbURLD2YprGstUa/18OgP3DNaPMqYk05
      J5sSIgBIIXDt6lVoNfNm+DlE0yRxtcMEDWMnyS/ZdRZJbD9FI01T5+2grFP6Lg3dIAZYNyay
      CVTF/FIKGL3YFrCZwhxxuP6zL8sSL/3h7+PmP/snQHXv049+BNOP/RGu/g8/B3bf24Gvf9Z9
      3jd8mdHgp49Dw9YCQDDoO9ZIhnOGb9XoiXOOoNLTtTFO3dgEbd6RbuXHppdO1n7ze8YY5HmO
      k9MTdOIOJskUZVG44vQsz9Gt5v5yzp1kVEohTdPapPhV1+8b2IEMYISpGZ0AUJTlrFIMXjsS
      2LFTzTYlzWfRJrFJ5aF78NMa6J0Q/Oou/9z7BINNP176GcZwNGw65M+HMQbTF1/E6b/4vx3x
      E/iNv0T0hz8P2dPIXzNEqY7B77gO2b0BM30BZhhCXe9AD54FTEoLgbprDQYgQ9F3r5HerpYE
      W9a9SQpoZFlWU3fazk/SLsszBEHoCC4MQzusoiISIhga9UnH/ao12l2oiGVVL00zHYGOTaaT
      2nHJRS39wIeLKXhu32aaBwCn97Z5T5pxAD/t+5AG8XnPi2y3sizXKhU1xiD7xt+j8L4AACAA
      SURBVGPQp6e14zwEXvUdIUL2EpAD0TUBcf+7IJ/4KNg0g+4HKO89AjgDMy8ABuAvJWC5grpz
      RQagtnT+tutjV/XEwIwY/Jm8AOZciQRql6eUQhSGmCYJup2OndFbloijGEopFxQiD0kz7ZeI
      i4bWMcYgA+mm5zTHmhKImXxim1Y+aR92yF5dCvsJa4WymYzMoLY7LHo+zWNNBqBjRGSLnt8h
      QVqE7w1bCy2fDwccQddTE41C8NjvgVRyfTWu5iD55wHEC1MYKVZjgG63CwB7a+3dFrii1ATX
      da3F9+3vDPRQe1U7jaIokKQpBBdOvSpVCaPbA0hNGGNQ5AUKzNx6tEPQrAFfytL18zzHeDKe
      k/I28DP/+VLZuWKwNnItvYEGajQb1fquVDrW9izb1rcR4e0I26Q8MMYQ3nc/+JWr0DdfcceL
      sUaZGscEhnGYzjXw6Q37Ad3ynqtj/CQ9PxJMIeZlkzp2Af+l2Anrynk3Ts5OMaokeJv6QMRJ
      hKKUQl7a6SuMz/Rkpezk9k1Au1KaphiNRjg9PcXZ2VlNJTTG1gksek5KexMptUahSsuUxrgZ
      Yj6aBv0i4m0azUT8zSKgi9wB/MIgf9dcB53r13H8M38fzOvQoTLg5s03QB+9HrpzFcVDP4rs
      vT8Lw6xs5y+lgKrehzGANuA3rSBnk+L8HYD04X3rkSSdSk16szUkAWONWmNTrvu9vpOSfn9+
      OgcApFkGrTSOBsOaTq2ra6hqd2lef90XopRyQUEAGE8mznax91AVpTDr+eAk9XW9+wJn1jCO
      qmimv9OS6uKvzydy/77pb4uqug7NAFJKl5TnOzE2oSXGbIrH1e/6AORr7kH62T+FHo0QvPEB
      xO9+N1IoyMf/EHxyAzo9RfnG74N89PfA0hJsVIAVClAG/JUUPFMwYCjv++BqDACg1gRq1yDi
      pEF6BO0FxcqyxGg8RhRad1+prFuT5nmRtEzSBEVZIgxCSCkdMflTHo3RtakuvnRdZ4sOw7CW
      xlsUhS2KN9YuEkLWUjm00Vblod2U1sCF64NDNlZTQvq/N2MhTbviMrQ5DILATchpJrttujZ6
      P+LOO9F/91thvvEFsCMBQCP88/8L4tnP2jkVT38SxUM/BgQdoJhCfvPUqZgOXEK99t2re4H2
      3dmgKPI5ydBkOlJDpskUvHK75tX3rNSf6c+dythSWkEZjSiOEQiJk6qGV2kFpWY59L5LcdXt
      2ff5k41Bc4e1MWDeEG5lZjEKmrTpt4xUSmEymcx1sG5Ke1pr08OzqtfqUPArvHa1JmOMdVD8
      1WMw//of2WIXxsHf/7cgxl9wBM50ieBrvw5GKReNDccIBnVPDH76L5fbAH6RxT53AF1Jx/MQ
      SCttjQHSLEVRFgiCEJxxG1IniQjg5ukJXj55BUprO1Oq061UquqaWgOsrk74huIq8A30JE1s
      B2LS1yuGKMoSWWGbPBmlrQ7KOETlFvVjEG268TJm9NWdi9bxm9hHYT15Ic3X/hTIKtvLaJgv
      fxom6LvPGQCQi2cHq7t60Fc7ACuWM4Av3fZlA1ipq1YKJNOL7nW7GPYHYGDIqwCQNXhtd2ZX
      9F1J2LIsMZlOEVZ5TJxzXDk+xqA/qOnwhFUIqVnymOc5TCXddaXm2NSIwv5eFWz70lsI4Toh
      NFWadRjxMmI6nSJJklqh+jYgBwQAsOt3w1dozN0PoviPfgo6OoLhEvr6m5G+7+egju9tJSvT
      n6mt56pAjLGVpf+mSVc2T4bV9H9G9azesSCQLsRvMwoNsiLHNEutzs0FAlENn8asWIUxBiGF
      09lLpVAUBcIgdFJ0WeVUG5opGXmetw7d9p+H0qo2QyAMQ9tFuyhc6WJTpbkIt6U2euvmZkVR
      uNlo/X5/6z6f0+l09lzf9jDw8nM24e3V94J970+iGF6DuvoAWDGF7l6D4QHyd/8M4k/8LzBl
      XrMBWKZgutXglhdffNEsykuJ49jlWa9SYJGX3iggZgfHrfIQTWUAF5W0oHMQA/AqaUpK6Two
      nLGaDt2UMJQYVyqFXreHbsduieRXZ8yOT02SBABqBugq6PV6Lv+mLEu8cONF650yxo1TNS1+
      emDWQNePPOd5XhM0vk5/SMOWYhO20e/2Wb5AVUVXDSvfBEopnJ6e1u6flwn45AWo43tbXOMG
      Yvxp8NGnwbIbYGkJ8fwE/MxmC6urXZSvH4DhnGQ4uuAqhNEMyiitoaAdM5AbcNF1rH7PnF/c
      l/6ccadbM8YgvIHWFN31H4IQwnZ0jiLbG9K/ThBgOp06fV1KiTzPHVO4gopzUBTFnIuYMWYz
      Pxstx2v3inljlZiwaTQewv3chKpsI2IEzqqWKVswAjkXNmXisiwh0lcQPvKb4KdPQV19I0w8
      hHziY0j+5i/UPssAiNEnwE9+1yW9mV6A8g1HkE+cguUM6jVdsGq/XsoAi3JX2tB2Yz4zoGIG
      uSBpzjKBBOcMBfnImZ1MT39vGnqLIpv+g44j66mhe6CMUEptoPyg0WiEfr/v0iqaaKozJBTc
      9f21sBZfd7X2QEoEMqhlolI8g9JN6Pe24RaH2gUI2tjWj9sywqZGsTEGqsgRffafQJzYdGd+
      +iTU9QeRvf8fACaHT8Y8fwL89I/mU7IFQ/mGu6EH7wNLPrIaA5Cht8oO0AxItbnoyD0oluwE
      ggswOf/y5z7ndYMg6dL05VOJILlPyc3Y6XSQZVlNr9RaYzweYzgczjG9/zvdJ0VoW1M1zEx4
      SCkRBiHCMHCeKl/S+z/LJtrTGtsEwS4hhYAxtrTUwFQVdtV727Lr39p2YQV980nI0ydrf+ev
      PIrg8f8d6to1qKt/Gzp+K5gpIW5+GMwsGEgup2DJRx3xA+cwAGNsrZ6WQdUXc+5mquBQFRVa
      eg6fQBbl/zT94PQd+jzn3El5Ak1sDIIA4/HYBq0aEpUIvd/vYzwe1wrZ21AUhWOA4WCIaZqA
      gbl8oSgKa3ZQk3ibBBFFtvzTnyxJ9+OvkY7tiwmsIJoxKW8Isk3Ot+4OQEKLMQbNQzTCWGBa
      QzzxEvhLZ8D9/xZ8+ATAY6B4aflaUH+XCxlgHf2/7Xv1i7Lm+mtoBp98gtZau+it9aRUEd1y
      5uchFYQ8F1prZ7TTufI8h9baSdm29ZIN4DNeM8pKx8j1SSM8O52OSxr0z7eOxGbM9sekNIk2
      YXAoNaj5XLbBpqkPTiXsXod67XdCPPXJmvRm1bmZScBGf7LR2hYyABmFh+hqvMx+KBsF1O6z
      zDKWMQZGm1qpYbNLWFOKN7uh+dcnwm4aor7RTTsDteCmirVdgHOObrfr3KK++ug/g4vM6twE
      666XMet+L6enkDefQPm6h6GuPwRx4ysQT3/KyVN9HM2nO6+BpTuAb+ztE8sejJ+e0FQFyLdL
      CW50Lvos7Qa+5GxWlTXX0WQI/1zALChIguHk5ARKKdetYhcg4dOqTh5wF9glqH3JKqqQMQZF
      kaP4+u8j+sqvAXnVeaN/F8r77obpXrWpzC9OARXB7v2bect20hx3V2gd1ufdV83Irv6mlxBJ
      U4fvdDoYDAY2daGKUq6CJkM0CZOKbXwmWIVAfanu7zLk9/d3X9/IvxWxbN5CE8YY5M99HeEX
      /yWYyukg2OhZyEdeQPngVahX96Cu3g91z0+A5V8ARn+62Pil82JeE79UDKCNBjdNfblu5HLG
      LOF76RnNRDFgpv7Q36MoQr/fdzW1m+5s/g7jVmhskhYZ2ZTfs0jaURsX+q5rs14FHmmnaqqf
      +8ivORSSJJmzkRZBKQX+zGdmxO+BpwpsUsAMQpj4JfCTX4HpvROm+xDY5M8XntOwEOBdQJ3U
      jl8qBhBcuHQBxljVT6fqDlcVk/uSvQ0+85BuTp8nr0Kv18NoNFro3VmW0uFL6KahTMXp/ufW
      gX/dNtur6UK9ldDmdVsEYwxYsSTzoKroYlBA+TJw+hGAnTdPzAB6Mnf0UokUSm/QxlZLuTaH
      qJf0NYnf14vJe9Dv9533hwzLTqfjtuLzBrCdx2Q+I/jVaNtkZvq71yLm3GcM4NKAMeirD7Qn
      sjHA9OoOBwaAmXPKdY2yPw2cywDLjMZdglQB8vpQYhvNdjULfPJN/Zx+p8osck/6nh+ttSum
      J4ZpFrdsgqYBvu53XUOtJQxwq2Kd5xFICXbvw9B3vGXub/raPTDR9fWvDz0XAwCWqEDkiw7D
      cG/F8DYyTJKWgXMG6fX09D03zX8B1EojScUB2iu1atesVBU6V+kl4REOrW9HUeSY1B/vc7tg
      UVeNRej0jzB53z8A++j/DD561h3nL/0V2GvevjPdZSEDEEFRB4RdSCSnKxsDcu9wxkGFKW2g
      65N0pYZW/vkAOGI2xrh2ipvi0CpGGIZu1gJ1ON4ljDFQRtvJ6Ctm6O4SUkp0OosLVJqgGItO
      R26ai/tbTwLsWSyNrK56HRYsN4LzPHfSdFe7AHly2ApJVaRfMzYrcgEWj/Uhps3zfOdEtA9E
      UeTmLAB2p9qX9CcBpmEgxG7SnM+DMcZ539YB9Q9SQQQ0ersypdv9mRuAmXO6QlAL8jiOd8IA
      yww4clVyPt+rv+07bbW7jDHHsN1uF3mez6U+XDSoUwK1QSHjPk1TpGm6l/RnJjiY9kou9zjK
      lnYbuo/uFjZk0L+G4qG/g+BLvwKmKjU2VRAvMKhXNz/NsFJZYQNLV0cSNQxDpyvvGkIIxHFc
      a0fYDBAR/C7IlMPf3A38SS9xHCOKIoxGo4NEtJvwGZRzjk6nM6cLU1BuX5KfhkcUZWGzYdUB
      OsRVr2w4GCA+x9u2CEop5M99BcHjf1gbbwQAJkgA1FUqQ2nz/gJWwLnsSYUfYRjunIjCMHTR
      U984JZ/xebXIPkMQ0jR1qgUxQr/fdyN0DgGq9T1v2DaAvRI/MR1jDGEQogzLvRvYjDFIIaCN
      cbUY68IYg3Q6QvAffhl88sLsOAB9Rwf6Wjz3HfLwGBaAmdUbOKy8P4XVMIhdbdFUDwvMdN9d
      dJ4gdSLLMleGtywquyuQ+uXr9IvWRx22922n+Ds4ZcIeCpuWPxLMydNg00ZqM2dQd3SXptSv
      Q/zACgzgt7KTUu6ESDm3AxIArFxvvC4oPaHf7x8keERBtkVrod2N0rIPAWMMxuPxuUG/fVw3
      2DJ+xOIhwCXgR8QZALH8PRoWAjArM8K5q6SpJxQs2gUDkJGrqiF7+0JRFG7t6wb0fPtjGQMJ
      IarilzqRucBe5ZW6CBuEcCjVz8e6Qwd9MMYgh3ehfP13QT7+hwAAfWcXehieW1AFMQCMBtQp
      DPS55v5KegGVDvqG6qag6Kwxxg6YOxA2UYHOqwgLggDD4bB1yF6apjg5OcFoNNprU7HLimky
      xWQ6te0uN4CUEurubwOCHvQdHai7ezCD8NwdgJUvg6mbMKIH8PPdryuJRVX10SFJt40uSTk6
      k+lkpwO2F2FTXbRZgNIEqXHNv5Hq1ewafdvn7/hgdnBKmqUwRruOfusgz3MEX/11sGIC0xvW
      JL/hPejhdwG8Cz76JFjxwtz3mRqtdJ2VxSIZwOcZeYtA3hga8zPdoUFN8Fs50jW3JbxFa6TG
      r83PNlumn3ee2xEMtrh+2B8gjtrtopXOo6tGwaPctcixxydg6TfAihtAC/Gvg5UZQCmF0WgE
      xhgGg8HSxDFq9gTMXIKDwcAdG1fjg8yGVTyL4HdqaMYI1lVDKKmtbYxPWwmkMcapO74L1y/O
      8Y/d7vBnI2+CMAyRv+XHofuvAj/LwZJGrlb6KPjoE1uH9NayDGnUUKfTQb/fdwayO1k1cI5u
      mnRjP813mlq/9z4VAn82l3/tdbBo91iUSk2NW/1gnn9NP0P0MrQv3wT+kAtg/h4Be29SSnS7
      3a3GMnHOoa6/EcVb7wdL1Ip1vwyGx4A4AiueX+k6a/uqiqJAmqUQUqITxQjCcOGMMJ/48iJH
      klhfv+B8696T62JXrse24BYVxwOze26LavvHb0XQHDXaWf3cLDrm74ybptITY/H0ESB/zM4A
      Xvb5amivYSFM9x1gyddXvtZGK+SMQ5UlzoqRVROqrsw+hBB2gLJW0MoOg6Ao4UVgF25ISq/w
      QQ21yqovKDWWbbZQuR0YgOCnoROonHMXoGxQlr+wkqZAUWBmMrDxZ+rnOqdgfiMGYMxOYKeG
      SXbwXP0ipWr03rmAF0/SaFd6d9MNTHk8k2RqWyNipjpJCEgxn716K9f1LsMu74tsryK4szXx
      0zAJZpYJtNUT47YK1112aUYvZVcD/pqT5ZVSSCiD00/gA1BW/y9lUOtZdLuCWlUCu7tPHT8I
      Hr4WyJ+uHV9G/AYcED3nBj2vXcrtKY4qNGdTbQMy7gjUQCvL0pqLrgZmVcBS797jdZnAmO0f
      RfGPTZup2X5AxWxmWzYGO+22jzpddp74AcsIK+BSdYXYJWjyCrCb8U6+7k9pDv40eB9RGNnC
      bjPzgthW49WA7ttwJ2CMORtg0+ZdZE+xPAEf30D8uV8CS16G6QXQ12Koaw/CdIfg0y8vXgc0
      kD4G030b2PSL517ztmWA5gC7bUCF8/7vjLHazDEfQgiAAbqs20EGdrKNYasPD7kVYFW9ep32
      Jq5epRTYjWdgPvSPweXLYNdK2/FhUoBPCqAwyN/xAbDpV1sL3GcnOgNLvrbSNW9LFagZEd6W
      AZrnA9o7xBGjCCGcQdwGVQ3Qu50CYpT4R/MXKIt4VRhjUGYpzIf+MfDi02AqmzN+WZkCPARY
      IwgpjltOuNquf1syQJNYN3WBBkGwcks/xjmiKEYn7ljd/xw9+HbzBlFeF2UNA+unf5QvPm1n
      fwEozzSMmn3fMI7ynveC3/ztuR5ApvNm6O47nN7PsHrJ8O31Fir4ZYfbukDjOG4t6i6Vjfpy
      IewP59BaIS9y5EV+bh7S7aQCAbNZCZRCsm4bFABgcQ+o5qfpxCB9qkQ5YVDXHkT+zp+Bes17
      wIoX579YvgJ9/ScAcbT2utdmAD+n5bLC3wG2qboqigKnp6etRnSe5XYQoNcZjnG+sq+nUOWl
      KtZfFzQTgcplKUbizz1ehwEYYwivvxp4+8PumBobpFe/G+n7/yHye94HzSJAXpn7Lj+9CeQJ
      THTPytcz4Oe3RZn7kt/IijEE4nLa0GSQUURxG/jNa31obSO+ktu+Ros8H23HnGdIKwjUJ8bf
      KqBeRk1QPtQmGcNhGEL/4H+FbHgNeP4bkOIU7J4YavwcdO8uGHCo4/8E4sa/ANPV/IRpAfn4
      18DP/hXK+98Cgy/V1B/DIoBxMJ3UrsWgAaM32AGqQI84QF+ZTUBbMGEXAz7a0p79HB/BbdRX
      eA1zJRcrPaO29u63AtI0xXg8dkX9uwg2MsYQ9wYIv+dHEb2hh5A9hfAbv4foU/8IIrdjUk30
      BujjvwvxdArx+CnkYydghYZ45tMQz31oXvcP7oSJH1x4zbVEuPNrX+ICD99dSe0dd3lOQlsH
      acGEk+baaJRaLX1O5EnyO2LfKjDGQAhR67zd1tNpXTDGoPME4bOfc8TM0xPIb/4xWHYGpjKU
      r3sYLO2Bj72ucQwwYct186dtohw4mFFApsAMYGJhC3fWWRxJq8uczutL612VIjbvddFsgtp3
      YAfNKY8BKUOl2cxLawPN1M4GUx8KfrBxlzYhDyKYwavBTp+y5wZD8OjvANrGBcTzf4HiwR9G
      8MiHgDIDoFHeewTIlvR1ACb/KzBtIJ4Zgb9ctdU8ilDee3U9FUhy4fpLXlYsaoq7KZpu0KZX
      aSEDMDbrcF1lzEohIblHMAbVcXus9LpjX3Y0W82Q0bttFZ4xBihz6PgKbIolA0TgiB8AWDFF
      8MiHK+Jn0MMOzJKCeZYriOcm4C+nzkXKTjOgeM96OwCraj0vM/yX0u/3MZlMNo4DUI/KNsPW
      GLOSL58yZ/3fmbFpEsBMmARC2nkIG6308NBaYzKZuBaPu8q7MsaAf+XfQbzwBToCtEyKqQ3Q
      iMTibONSQz55BjYtoO/owEQC/DQDHxUIHv3Y7ZUK0ZRKfnXaMvid74qicEUfg8FgIZH7g7PX
      RZMp3HpvseAYNSGmstdtQO71siyBV75R/1vvVdDX3gTx/F8AuoCJr4CPn5t9YMGgPN17F4JH
      nwQbv4TyviO3S+jrHcgnR+A3x7cXA1AbQB9t0rt53J/R1el0WqdS+udrqxP+64xtB4sYY1AW
      BbKXnoe+8Qxk+GpwPGb1dy5R3v1tEKdPQffuRPHgDwPyBOHn/h+wpLSt9acK4pUS+kqlBhkD
      ZAryxtNQdwTQV646oxcAwBjKu64ivPns7cUAbYZYHMe1WMAiBhiPx67i67xe9kot9+78dQKl
      P2zT+iWdTpB95N/AfOZ3gTxBzjn09QjBvXeB6SmCpz8JllbD7R75MMr7OcoHjsESBfHUGXhy
      AvYUwE4jmK4EKzT4zRTqrhwIujDBPJmbwWuhB2t6gS472qQydajIsmzOf0/BnHWCNtR79Fuw
      kFJCSunUl3WbpxVFgezjH4L5+G/MDmoNdTNBcPQMeFw/F58+C+jrgOAwfQ5WVA0QDCBOMuBk
      liekh+0tIY0YQl/720gfPrq9coEWFWFTnjrpmdTUqt/vu5yVZR4M8nPTiNW/jp3eFoGemRBi
      rmLuPBhjkE8nMJ/9/dpxMWTovjEAr+jXMA7DOYxgUNcFAA3DIhhw6Gt3OM3f8MC1SQdslNiH
      jh+AuvJDgLwOdvP/A8yN22cHWGbwUptwmhgppVxZb6WRS7vsjH07wR8XC6zuFDDGIE0SlI9/
      GZjWu7gFVwRY5dM3gqN849tgglNAj4GQAxBQd/6XAOPQ1wSiT/0iMH0ZxQM/AD59GeLpTwMw
      EM+lKDsDIC5s7k/nITA1Bsset67Ql0e3DwOch06nU+vns0owj/qX3grjli4KaZq6hMBV26AY
      YzB56XkUv/a/AU98afYHBvCYQWcaxthGCvpqBNN9HobFgLFxKBPfDxPeAzCB6PO/AF61UQ8e
      /V1kD/+PKO//PkSf/kWw/AysnMAgBIMGv/nbMMFds8uVt9EO4Ldxb8O6CVrU4/NbxL8cvmBZ
      VfqXZYnyT36zTvwciF8nIfrMjvQNBNQ9fZgje24T3wfTeQdYfgp9/F7Ipz8F+c2PgZ98052C
      6RL85uMw8TFYdgYTCpiuV8kHDcDAyOtg5UsAzO3DALsEEf9FtBW/1bBqrMWHUgrmmUfr5+kz
      yEFV0CIBozQQ2tJSaANW3oHgcx8Gn9xAeddjkM99Hqys92A1jAHsEbBcwUQCKLX9Cb1AZPFc
      7TsrMcAu2l1soiduc41tzvEttWd1bJL2zDkHrt4FPLm4bpcZQD56E6YXgOUKuvd54K8eR/qi
      gv7yH0F1GcJXCbCQQd31TgAaZvAiwJ+yfv57jyEfO4N4fgL12sFcpNhAADw63wvkN3bdJrW4
      eZ59FIPsykj9lo9/9baGmzyrIAgg3/9DlgkqqAlDya7BMOG8OswAfFzAyGsoXvWdSJ8qocYG
      JjcoTzTSpxSKN/0g8m/7r22kt68doeveENl3/DjU3f3WNAlWdmCC/3Q9N+imhHGojsi7an/Y
      7XbXGux8KGhjDlJMzznHYDA4lwk2TXxjjKFzz31gf+dngaBKoVAa6ddfQXL8PTC9V9W/IEKo
      kUKzH5ZONIqr7wFQgKVPuuMGDKb3Lqgr74MevhtGXIURd8yaxWkD+fRfIfqz/+MwDEDf9csH
      95FKsC1hUPVXURRunu9lgtLKdp3TaqNCmjiO0ev10O12EcfxwtFRFMzy83sodkIjcwFsVPdL
      KIsC5pO/CRSeqpln0H/6MZjRaePDKaAWCDfGwJIJTOdtMLwDNpIQN64AeCsM60Jf/0nwV16H
      8EtPgJ0OoAcPQzwnwU8yMF2ebwOQ92SbUPe2KbKHQpqmrsvzZYOibmnUZnGDc1AEm0uBQb/v
      MlFph/ZnG2RZVpsMSsfWnfq+8H4mZ8Czj8//IUugrr8L/JX/MEt/Tl4BH/8F5hTw1z0ImT+H
      8M/+OdSr3orizT+N8Av/K1j5LPgr/wzy+A3g4+fBxs+D6QLixgT5238QeOCNgPkd6KPXru4F
      uhUIeFtc1kAX1WIzxlyhzboRV///y1xhOk0QBHaeg+B2R25GcrXWGAwGLjlwpzu3kMCC0Unl
      vd+L4PSLLg2awUB0FNDnUFMAV14F3Ps2sPf/MHD6dcCUYKoEWOzUHJbehHj2JTAYmGgILY5Q
      3vd91g69+iDK73wzgNusM1yWZSv38WnDpWUAGHDGYKoCmnXvzxgzV545TaZAtdlRUDCQAbjg
      CKpBJ6SyKq0ck+wKotMD3vQe4DO/U//D9bshknozXMM4gvxxBG+QKK+8BfkHfg7Uj7wcfAf0
      0euhO1dhRIT8XT8DceOrUHe9C/Kx3wUfP4/snT8Dddc7bQc7r4kvcJsxAHmYNh3MQIbvZfP/
      c8Y303lQJ/5FDE7ZrU0vH6/6HtHf+70eOBeWCTnbuJuFUgrZY18EvvzJ2UEZAq99E9jf/C8Q
      fPn/BKukv2ECJj4CT14BGCBHj0O9/AhUymE++q9hxqfQ7/lemG/7fptb9OpvB7v7vfa7d70d
      DApB1EfsTS86O3kZf/aJj+KGvnJ7MQBgizQ2ZYC2Foi3KkivV2Ym+Rd54xYW/RgDXXnWjDE4
      G81ydoQQuHJ8ZaMinqIooP/o14Dxyezg8R1gP/UPbTDLeC5yo8CSm+5XplJEn/5FJE8D5hXb
      GsV85FfBjq4DD36760zn9ydq4sYz34C44yF88P5XQS4K+JDh2naSZuXVqiBjahe1o4uQpmlr
      YcxfNyitq5bsdeL3pTy9g00cHMaYjcs3jTFAMq4fLHOYai366LXgZ5UaZAAoU9NVmM7BTTlr
      j6s18PQj6LzzA3Nz6tqQ5jmOBnfacVeUx10UhZus7jc5Jc+I/zOZTFwvmHUboB6is9y30pXr
      Tgt67k0Vx6+NWPd9bOMClVKCvfN76gf7V5yrM3vHTyP99p+FCXqANpg+eU0ZVwAAEcFJREFU
      niN9qkRxomF4AHX0eih4bRA5B+55cOWOdK957b346p/+Af7ff/+JGV/5hd5NidB2QmIYKjg5
      L7uyWYyyT+R5vtPhGLciOGNQ2rRKfh/0rpvv3O/50wbB188B8q+J05fqB595FOzjvw52/TUw
      b3oPyle/B/LFL0M8/sfgUYizJ1OkE4bOB78H3ff/JHD/08BHfhWYnIC954OI3v4+564/b0fj
      0QA/9J/9BABvY7HNXWeF3kqplVKGacegwuhl24/fS2fbvKJVmG2Ta7TZAFrbEPutMthCaYWy
      VK6N5XkCp434rxxfsanHxthugG73tkG4YEM7C6j6Kj33RHMVMJ/6bfu/D70X7Ed+FukzBfCY
      Qdm/C6cvPAlohew3fg/Bu78b8RsfAv7+z0MphW636xpyEbMvswP9YX61T9kmTbq2laxKREop
      JEniIoxtWGZXrAp6EcDiRKxtdpimwagqIrIekcvrM/DXS7lWy55DswquWSN9cnqC4WDopr7v
      0qbinIPdfR/MUwvGmT7yOZhP/w7wxU8AWsE8+5TV82cLRK/Xc8E7vxsdxSuIjn0Q7UgpkSSJ
      jYT7HyDiXJT9ed70D8bYQs7zuyxs+zDb9NvmA9jm3FLaHj1plrpjlzNCYKW9NnZInysNXEHq
      L2MAYDYTOFqzxncVBEEA+V0/guLFp4Gnvg4wDpTFzPujFfDJD7vfZQT0r3OkI41owBFdG7r7
      bGvFSPdTliWSJIHWGv1+3zU/IG0nyzKwb37zm8ZXfWpNXz1CIm7zXYX+bgHYHJJD58+0eTau
      Xr26tTuzKAqcjs7c4Ae540DQrkB+fv+9kaNhGfyduMkAnHMcD4+2bneyDFprZGmC/LknobkA
      /vyPgE/9Vv1Db/8u4CufnssDYj/232P4H3//wvehlM2ZGo1G0Od08ODATGLQtuk3PPW9Qv5D
      ppE4vrS5CMOTru8b8bvw5QshMOwP0O/1EAa7l4K7AjEnA6u9u1XQGhNgHFeOjvdK/EDVda/T
      hXz165H1jlG+6f04mVzByXMK+VTD3P1GsB/4e2Af+NF6ykQQQdzzwFI782w0wis3X0FRnu8N
      lK4bVwt8tcI3lIgBfI/Ruu0w9gHGGIbD4U7ORe3+pJQ4OzuDvqQMAFDLSgGlz1d/lqk+YRii
      3+0dLBjIGEMcxdDa4KXf/DCSp24AAJJTg0imuGoYgg/8KMqrd8H8yYcALsE/8KOI73pdK60Z
      YzCZTpEX1fCSFTpuy+ZWCKBG3E33pa9u0Fa7TpeFXYPWTurYLl+eMcbpkJcdjNnUBAYGxRTK
      BTEa30ZqEv/RcHjwxsdCCGtneGNoYYDsG99E/rWvov/+hyHf9d0w7/yAW+ci1cfSpxXmq6Zp
      SCIa/2H5DEFE7+fzk15MTOIvynenHgr0Une9AxVFcanygtqcE81j9O4443NjmHwhV3N7co5h
      fzBH/MYYTJMpjAF63e7edvggCHD1p/4uAGD68Y8BRQEwBjEcOhpbZe4A5xyD/gBluXrlogQW
      98/0pT9JDdL7pZTuX78rwGAwgFIKaZrupEJrHVCn4l1Aa43pdHr+Bw8El9SGWRDKGIOiGtYn
      vcCU724uVVmbUdA8JwD0e/25ndMYg7PxyNUQaK0x6Pf3wgSMMQzuugvhf/vf4eYDD2DykT9A
      573ficFDb1lpV3cu4Cr+Uapy5fFd7MknnzTNrZLmPPmd1EjKOq9IxQD+rKg4jmtBhrIskWXZ
      waToYDDYmSo2mUwujfTXWrtqMADVvAFhyyNho76LtnzawZXRbhINvU9jDOIownAwnBMcSZog
      LwporV2DgOOjY0R7dHTQWinDYNV0C2MM8iKHUhpFWSDP8pWT9CR5DZrDDtr+pc9SL8hmX/hm
      GgUlJlGD2izL9qIeMcYQRdHGWaAEegGHZNpla9FmNpSQMeaSz0pFvn/YZlLn6O26ui+tNQwz
      VX2BHWc0bNH70yzFyamdyXV8ZIdQW1tvv8YxCdZ13qMxBkmaQgjL2HmerxWxlwBqGZpNt2Kb
      LUCLDYKgxjjT6RRpmiKOY+cVop2DGihRgt2uGIExhk6ng9g3ojaA1hqj0WgnQ/W2gamIXmvt
      xik1paAQAt1OB5PptObp8PN6iMi10bPzVcehbVnkcDCv9zfPM56MceXo+NKOxSLhrZT1Zhqt
      wdaI2Et6wFprF0KmE/u6vv+77/lpPhTSnZMkQRiGiOPY6XA0cSWKIhel28ZO6Ha7CMNwJ8l1
      fhDwoqCNRlkxoC/xm+h0Ouh1e5WRmsAom6pRauUmVWpjILi1Eaz6ZMD4jJkGvT7CoF2diaMY
      7Ijh9OwMg/7gUtdIcM4RRxGKssA0ma7txZKWe+xDJ92/6f8XQiDPZ9PPfY/QIhhjnCohpUSn
      06l1YqaOBKRy5Hm+NgGSpNqF4Uvb70U1xCLiXyZlB4OBDcrBrrff6yOKIozGIxSFFSR0DsYY
      lBcR5pyjE3fQ7XSR5Rm6S9q+MMYQhRHuuHb9Ukr9NmR5bpPg1qxSm0uH9rdTkv4kpUnHJ91/
      1YdTliVGo5FLnfbTp8lO6HQ6GI/Ha+0I1MFhFz18yrLcG/H7qSaLAjjK23nbPhNHEaJKYvs5
      VWEQ4srRFUySqYtZkOByY22B6nPH1qW4gnG5aK2XBcYYpFkGKQU44zavB+vnmTk3KD140hXb
      EoxI4q/TCdgHpVWkaYooipzeTg+73+/bqOuK9gHtJNuAdr3JZLLVeRbBdyUvezla2QquNj+9
      7cljnw0FKYfDoXsHnHMMen1oZRP4iPgB64joxB104nilddwqoLSPorDNwsqi3Kg8kwPz+m/T
      K0T2ARHqtmkPWmskSYKbN29iOp3Wskx7vd7K59mF54dzvnfjty3toAmDxUlsURCiyHMXg/GF
      kft+RfS9bndmsBpAa4Nu3Km5SS+rQbsOSqXQiWPr+cly6w3bgAHmCmJ8zw8wr2fTgIldIcsy
      lGWJ4XDoVKIois51Q5LatAvs0/htI/w2D5t/rKmK0s5JhDsYDFoJuN/tQSmFo+EQo0qdbLOR
      Lpr4ldbIczvjlyClcAG+VdYnhUCaZSiVnR+8auBr7jxUK+oih2XpdH9SifyAxCoh6XWhlMJk
      MkGv13NuTRpJtAjdHYXmSaoeCqTvGxgIzHR5zhiYEI4mmgxC72dRz05SB4MggNIKV46O8fLN
      V6C1xng6waCK9l408QP2mfsdJoBZbn+/14Mx1uZZBLJzpJRIsxTa6Naxs6uA+w/ZLywh71BT
      +u8r5TnPc1fMfp4qtKzqbF2kaTqX9LdPkF8eAJTRLtjFqk4boQxrw8h9Y9bX+5dBcAED4yq5
      kiRBkqaXgviNMQvtrSzL8MrNm+emdCdJgrOzM5RFAVWqrRL4uP/iSdf3F+tLjX3n+/v2ALlO
      m6DI8i5AYfdDdKogNNUbrbVrdMsZr9J4WdUJbvZeojhayx8vhcSV4ysYDizThEsEhtYaaZq6
      Z7EvGGMwSWy68rK1GLP4XWit0el03BDzbSvWnBfId58JIeb0x009P+uAgmj9KumKUih8Vahb
      GXnbXmcymdSIH9hs2MO6EFxUu4Cn71d6j/Dcm4ILMKMBMGijFwatloExhk4cIz5neiN5wYwx
      Lp9rH9VvWZ5hMpmcS7DL5BBlEpA2sq7nsAlH0aTr0/9rrREEAe68805nE/hqyr5AKcjUqLXf
      7+P01LbL3oXXh5Dn+YXk+TPGwMGhTX2mGWPMRm+930mvlUxsXed8Hnq9HsbjsYvg73q3L5XC
      aDw+/4MAgPZYiFIKURQhiiJMJhNMp9OtM3ZdLhAw81iQ7h/HMYqiwM2bN9HtdhFFdhvOsgyD
      wQDT6XQvKc95nrsUayEEut0u8jzfmeFL90YPb9WGSrsApTXTda1/Hi5fh5mZ6hkEwUGS8siA
      Pjo6cpH7XcIYg5PTk5XqlAEgkO2OFkqxl1LuTBA7BvCLYqivSr/fx2g0cvk2tPWQJB4MBkiS
      ZOeT05uETvlDuybQi/KHc8ahtLJbeK+eY085UnEVuAqCwKkn+1wrDS7ZdWWfTaibrBxn6XQ6
      CFp2n7Is0e127fnG453Za9LPFQHqrU8oNdXffrXWtQguESt5U7YF5Qw1seuXT3UNh4ZVbRgY
      A0yVwegTnZQS3W4XZ2dn6HQ64Jyj3+9feKLepkjSBJPpcr1fcA4uBOLQZge0pTNnWYaiKJx9
      uitw2m79jhDk+SGp0MR0Oq29kDiOFwZn1oGUcmcenkUgr9dFzwAj191oNJpLBOTc5urTnOKL
      TtHeFEVRYLzE6JXCpmRfvXIVV4+vLDS+jTHo9Xo4OjrauSCQ5Inwa3nJ1UieoCbopfT7s+CK
      lBLD4RCTyWRjDqVA2D6RZhmmyRRhEOxdrVgV4/EYcRy7rtZ+MJCycC/bvLLzYIzB6ehsjmCJ
      1jpxjF63t9TbRFFwstUYYzu3Obnf5Eop5Qj6+Ph4qW6vlLLBCG9BQoiNyxJ7vf2349BaYzQe
      Ic1SjCeTKlf+cnR8aM4nE0LYaq2qyulWwyLhEkURrh5fwaA/ONfVmiSJy9OiPlS7Bm9a5kII
      9Hq9lS5mjMHZ2VlN/yfXpV8bfB5oqME+YYzBaDxC2egyprSC0pdDxUjTtKZe+qkPt5oNwDlH
      r9t1Qk0KgaPhEMfDo3O9TNS28BAeMEm6fp7nbqpGr9dba1oiRXDJICY3I2Nszl5owjek94m8
      KJB4jOryaxg7eC+cZSBhQs9ECOECg7ca4ihGGIQoVQkpVuvYQe8nCAJ0Op29d+bgvl5FPvdN
      tposyzAej2u+3iiK3Da+CF1PSuwLpPqQpKfOCMDlSQ32i8GzLLN9Lb34zK0KzjnCYHEzKx/G
      GEyn0700OVu4Pt/zQ9J/0yBDURQYjUYr2wX7iDi2oVSlC+7N/Ww86Ge3UEq5xgHArIruVuhK
      twtorXF2dgZgNpxjvHLkeHNw2nJoq902wqaUwmg0qjXTpXP7xH441SfHdJrYuWaM15pKbTPl
      ZNegAA/1WYqiyEXAb3fkeY6zszOXi0Q0tG+7JwgCawSTGkCut21hjMFoNKrZEYwx9Ho9l+bc
      6y13ge0CVvUZI8uzWqr3ZQU9NxIOQRDsPS5ykaD8MlKdqVFzkiR7j31EUWTz38iHPxgMdp7S
      QAYdRTTJn70owLZrLCuqsTlPJZjYfNjbvkCOg3W6o91qMMa0ptHsqzbbB9F8lmXgNPI0qAJD
      u0bToAO2mzC4DoIgwJXj49Z7s02i4OZfXSZQvtVl7sezLbIs27nAXRV+yS2nXJN9pjlT0OzQ
      +ixjDIEMMOj3wdls9JO1BeyPHTF0mGKYVUEpAZfFQ/X/l3dFOwrCQHDLUYjRhP//Q+MTGhNt
      qXAP3KxrTxBjWwjOBygp29LdnZmNAekKkhIoLbPVD7x6YgcAsnpjTPJga2xDP1nWjzni4O9F
      2PnCrkBFUcw2ayEl5jpw8jx/yHMzdH1TBQGEDKnkh7hnQt3me8dMnSQCqkio55au2hKoUK0d
      MEtODbgRAplzLnmt2ZheGhc708ecgk8hddOhghOEw6q6D6Pbbre02Wzocrmsfto95IwxAX0D
      Djfw3OQXQB0Oh26uZAtcl9D/33X9REsISUL8nn9IQEW12+3IWssMWQhZbrde8ALB+TNorZkB
      K4mIEB/BP3WtAPcpBmCqoJQiay07mZ/P58eponNuAKJ7QywU3XeovPYJhhwj5DhWBL1cS5w8
      Yy8a3fe1ljvH0LYt1XUd/HdhIdM0DRuKwY5Ta/3QYZ6dBQafmFCKslDXHgm2LxH2KVDB4aqC
      2rKkWQBlWQ42/TCXAByYb4J0HQl5E4CiDq4fiAeUXuW7mH0DAKESoljBLzcBNgB6HK9sOdBl
      HzvhjTFU1/XXbQTkApge9Iz5+o5pWVEUXKzAF0DCz3kXswFeBcgUxLA4lws/5BzhnKPT6UTG
      mMFKUVmWVFUV08SHcL1e6Xg8BvsiLhly3hwUhv76wUXD/ek2pIuf379BA/GdGFD7/b6Lzcl5
      +RB/ecCniOFb5L8MYGzNMD1n7NozRW8R0gVvifBzJqL/enMi4sBXSvFQQEWKbl1LihSXtrXW
      XK6eil92g57RNFIsXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='119' name='Figure d' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Figure e-1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9abBkyXUe9mXm3Wp77/Xes++DwQxmBhhsxEIQEEiIoEmRdJgkKDMokSEz
      GLapCMqSHP5hhUMRCkcoJFkUZUmUucqgYJq2BNEkwA0EiI1YBxzMABhgMNOzz6C7p99S610y
      j3/kPVl5b92qV+9Vve4HUgfR6OmqW/fmzTx58pzvbOLFl16iQClcayIiGGPQbrchhIAqx0RE
      AIDhaIQszwABgAAhBIQQRzYWEEBkQEQQQkJKASEk/EdKIWHKcRMIAoAQEkpKN24eYxiGgBAY
      j8fuvpVr+Mbe50z8fafVRhzHAACtNQbDIYQQkFKgyItyrAJBEMydG601CAQpFeQRzd+yxGvO
      JKWcGbcQAq1Way1rnaYp0iyFIYIUAlJIBEI0P/hqE0+GUgphGEIpBa01AMs8e6MBDAii3AGW
      KY50RCj3gX2eVG6ORDl5hS4sQxGByoUUUkIgcBuU3yOMQmhjYMjYRfeZXAgESoGIUBTFzHdE
      dnNFUYR2uw3AMjKEQJqmMOUYALuWSqnG9fQZLphzzdUgHitvWF+Y1ccUx7ETiquQMQaTyQQG
      BAi7TkoqBEpeu4mokygXtN1uY3t7232W6Ry6KABMJ08bg6M6uXg+pBRTKQ3hGB8g5EUOozUM
      UYVhyRjklCMMQsjyJNBaQ0BYRvWYXwgBQnXRywPOnQiOMSCc9CciDIdDtzFYUNjTQO7/brTw
      kiMnQwZSyKXGmiTJWvhzkk6QFzmICLI8pYUQCFa+85qIpaUxVj2IoghZllmppY09pYjs2tER
      riBN+UOVUplgN4OSCoUukBcFqBxn4y2IIKVdYGMMtDEYjceOUaVS7tRliRwGIdqtFowx6A/6
      yMsND9hNkcSx21CTyQSTycSNj++lvPvOo6NUHZchIipVkOWuZYG4ChljMByOUJhy/qUsBRmO
      zwYA4CSC1tptAACIw8gxojEahgz0ipvAMq+o6PQsHaQQ0EaXunw5NiGQ5plVeTy9dREJVl+E
      QKELhGEIQwZBECCJE4wnY3sdBFpJ4pg5jmMUNam+ubkJIQS01hiNRo6JfTXCf48mJvfVjWu1
      CQwZd5ruRzwXqxARYTweIyvs2imlEMip5nBNNkDdQGz6njdDRU8EIFXgPtdGoyiNuoMsqFUd
      pjaE00kNgZTVk526I0r9MbO69rJUGA1prJ1gyIA0od1qI1ABjNHoD/puzEkcu3fUWmM0Hlfu
      5YMCaZqiKAp3Whpj3MlQFIU7eeadBPupHUdNRMAyS8X2zqrjJSIMRkPowq5doKoAwTXZAIYY
      MZlKsUJrSCEgpMTFy5ewubGBIAiQpumMgcTMEqgASirkOre6+NJkn2OMdv9mZEYXGkIKhCq0
      YzUGeZ4vZH7hoT4gQhRGyHWBsW+cCqsOTdIJ8iwDSqYWQmA4HiFNUwAoN0x1Q2/2NtzmmEwm
      FQnOiA8b40VRuFODvztqaa+NhhT7AylW/TEI5WK2C8MQ3W53LWMbleghESEMgor0B67yBuAJ
      IEIF5tRGI45jxyBKSuz1+9ja3ERoQmRZVoHLpkaqnfRQWdUi18Xc498fg5LKHsWllCciaFZ1
      pEQcRoAA0jyDAGY3lwdZ8j15XAQgThKIPEOe5+XzJLrdDoajkf13yfhSSovyGEKhpzq/Kj+X
      QqDb6SJJEgBT6d/E2Iz+8EbQWjtI9CjJrSmAQCwGJQhWldxvo7DQWQTnLkNaa/RHA6dRhEE4
      c7+rugG0MdBkEKrpY7XWyHWBTruDvUEfSioQGeg8x3A4RK/bQxiGGI1GFiIEHIautbYvFoZQ
      UjlosjDaMcgMpl7qPUqqyr0AII6i8vmWSSnLIKUCQZfXAkKKmU3GyA2ViBCRQRgEKIoCSRyj
      3WojDEMksWVk4Ul/ACiKwo3Dx/KBqaDI8xyTyWSuauPj/6wa8fsd5QlgyMLFIANacApYCFZD
      iP2RH2MM+v0+Op3OSjbAaDxGkdsTMSpRuTpd1Q3Aqk9e5M7YzHOrvmitURQFWnGCLLeMbtUf
      iW6ng263i8Fg4DYBUN0IvPhhEEIZhcIUCMIIKL837HwClQbudAPwKWL1c4M4jpFlVvpDAGEQ
      ADQ9cQqjHVoVKIVWq4WisGMAEeISsel1ezOGZxODRFFk56fU533i9xuPx04qziPeBP5GOkrm
      Z6YGeCM0bzZD0xNOLRhOkiROdUvT1M3LYUhra2cRqMT7q6eJNhpEV3kDCGGlKBGhMIWVVKUU
      d0ZgqZqowDJjmqXI8gy9ThedTsda9FlWWVyqTb6UEqEIreEjBaIotvBhOkVddGlzoLyPgzjz
      AlJJjCdjBCpAGARus0RRhCiKkGYZgiBwntRFzpyDMKDP/Oy0KooC/X5/ZuMvuvfVQnm00RXG
      12QgaPbZzvm2wOcUBEHF47uK6kZE6A/6btMFKpj53nrv17gBfFVj3ksqIWEEIVQBCl0g1XqG
      efI8dwzJE6e1xl6/j1aSoNVqQSmFyWQy81yfrJFsdf281OVDFTiDu7zIXicVjNbISkfJeDxB
      q9WClBLtVhtRFFWRgwMsDo/PV0vyIoeS1uPtj5dVNj4NtdYYDoeO+RntYZRKXcMQFlPOoy94
      GONXNUiWpfAiREdrjSzLZub6MJQXOYbjEcgQVKDQ5OwlWFurspL7SZZ5xOgDTwbrt/X7SCkh
      wYavcQvunwBOtSh1cR4PgTCajJEXBTZ6PUgpy7gaqoyjPn6rak3HoI0BoN0GkUJCG420RAqE
      EM5Q73V7B5ZE/G5FUVjfQZoiz3PH1AAglDVYW3GCNE3RarWcrsvvNRwO3VzwO/F8sY1yLUl7
      zO/bJcaYiqErSmN+UdwRvxf7fcKwWV9fhogIe/0+jJ6eOvVnW5XXrmvg/5BjVYJ9dmv9gSyt
      /BiPRV5JlnJUgsK8mOw5jaMIeZ5DlhtCeD6BLM/QH/TR6/aQJInbBL6EXYQeyHLB2OlljLEe
      Z2PcibDZ20CSJHOZzH8eIz1SKaSZZXZjDLTWSKLYnVQ88QCcBIewBvB4PLaGWhTZ35Xuf9/w
      Z2xfe6fmtSJjDPIid+OqjEVYH4iv7pQ+x0ZqtVpIksSt3aobe1IKHCKy8T6qWYA5VYs/IJCD
      BgujEc6ZZG208+T5iANLA5+5lVJzA7MYshNClJ7P6SbK89wapGScjmkHaf9mOHCjt+HsAv8k
      YGNyHloSes60NC8h1vJ9Ou2OU7Nmjs2S8dkOcXOitT1ZysulKEP2ajCpM0whAEPOOeMLCyEE
      hsMhwjDExsYGhsMhsixz42E92d/wV5OIyIaCEDUa7EyGDCRkCZHO99HwZl/HiWZVxsFUAAuB
      QADi5Qugc7eAGhAoz+pyb+ECherEOl5hLHSpjZ75nokNOI5/8YnvHYUhojBCGITIstxFSWqt
      kRfFVEcu4UVR4uP8sju7O05i+vf1VYcm4uuyIq8wf7vVwkav13iCsD6+u7tbYX6g1M29RVZS
      OTi1rpbxvPBJEYYhjDHWuE5T++65la5RFGFzcxNbW1sIggBx6TEej8cVo/hqEvttfNjWR+M4
      otd4n89zkiVJ4n6zjnGNSxWZ5zxQAcTF50C/+g8gXn668XduA0gpEarASm05fzeyB1cI4fT4
      JmnZhIhUHlz+Pgqtc6K+UQiEtER7/JcUJXKD8rTpDyxCwipL3ZaYN1nOEC6vCcMQmxubjZIo
      z3Ps7e3NMP50rFMER3pSpg5bOj0e5E4TAC6sga/v9XrOJmBoc2Njw4WJ93q9igF9NUkb4yJa
      mel57wdKoZUkaCcWQDDlF4UuKmsRhiF6vR5arRYArG0DDEejymdSStDZmyB+6h+Czt/a+LuK
      guSO5znkMxcAt7N5AX0mrhtH9fsoqYAS3zamdBzpojIZTq2afuDsBv+awXCAVquFTrvjjE7f
      YKxDprkuphu09KDWmZ8ZNE3Tih7fOC/l32ENa+ajuPBVBimgpMWDjTFOB/YD3HyBwPPTbrfR
      7/fRbreRJAmKokAURe5EuRrEvhSUKp4AEMcJkiQBkQHI2l+cJMT8ZKjK4J1OxwkM9lusQpb5
      h5UTNyxPcYIAXXfb3N8eGAaVQkLDOLREUrN+7wdlNRFfo8uY+jiKEMcxRuMR0lLSOqYRohoC
      XdsEgGUUAWtIsnrBm4BPBjb0ATj7Q5VSK/bgNzbsh8MhJpOJxfwXgAIMpdaNQRYWfArYGB+b
      M8C+CI7daZWh0IPBAFpr9Ho9DAYDpx6p0uEWx9aw9o1jP3nooMRzMk/t9YntHH4fKaWDi4Ww
      n+V5jrwMA4nC0CYI6el9+fr6/K1CxhiMyxgpt7FUAJX3IbefQn72wbm/PZwfgGCPt9IgYoOP
      GWqe4VunMAwRhiGKosBgOMRGr4ckTpDl+Uw06IyUaJAao7ENfGolLQulBoFzmlFpu/A9jdYg
      WD27Vwab8XdFUWAwGGA8Hi+Nhvnvq8scAFHaBu5kKaNXUaIiQgjn/QSq4eB7e3sAgF4J+QJw
      cfEcOAespj7kpaNoGfYzZGZOUwAYjoZoJS2EYYjJZOIksYU/JQSmTMmAxzqJiLCzt1vCrxLi
      wlNQ584BG5swYQ909n57Wo37MK3ezO8PC7ZC5zmKvLBZUawSldLIRzQWEasrWZ6ByiwrNmLC
      uu68iBG97/M8x2g8QhAEFT1Ze8wPTG3+JEkq6YFE1YSTg2LSFiUpcX9dlDkMVj002gBmip2H
      YeggO37PKIrcuNmu8U/SNE1XVhmYlJhuvP3WSgrpMvDqzx9PxphMbMYV8wADCVSCKoAVeOuG
      b9MsQ5ZnzrZSN9wA0e7YcQIwkBB7l0G//c8hJ4PZ9zroA5mxfWvBh/kOsjhWUmqEYeRUhSzP
      3OAP7Jhj41xrDEcjF1Zr/RvksrMIcGpNuzTE3JhKVSKO46VPMp98VIQ3ZWG0Qzv87C1WaYqi
      aiQyOlRPBucMuVViZHySUlrVbcnkains9X7SvxtbCSfX8xE0TdU93/BfF/WHfQhMNQRqtYGa
      85I2TkP80H8Lk1RDrOXupcOdAP6Rzcc749J1p9g8YsnA8T7tpAWjjTPulKxJnEX3a/jOGJs5
      FccxVDC1AUA2gV0IgSROKnEiLP0ZhlwlGcMKiqmX05CFB5MkQbfbdZKdVbU8z13Mz3g8dgiJ
      T2maOqO40+msJdT5oE41BjBCFVR8HfV7ydL45TvHcbyWMAefxhMb7QnY+K4mry9QnvZBVWgI
      nYP+v397uA3gu+X530wM583bBIwjO6+pNiBDSJLE5cFymLM20/Ihy5wrDJFKpRCFkcPbW0nL
      JWH7J1hUM3yHw6Fj/sOSbwcpadPvAhVgo7eBjTLJR0rp9HnOdQiCAJ1OxznBmiQlj5UN9MMa
      vusg3gjz1CJNxiY5le/a7XZXCnGokzGmAnsuMuLl3mXQ/1NVgUiFED/6dw5nBPs7nY9rHyPn
      o87XLf0JyrLMoTAA0G61XUgCS8WmtEBGfmZycr0XF0Ig8iaaiNButdButRzqIksvob8YeZ7P
      xfkPQuxp1iV6E4UhiAidTsfBqawj53mOOI5dOHeaphWDsU4MqTLxPB9Uiq+LnCosrbRnvxBg
      NymEzdpjxl+r9E8n0yIDtbWsgya0cRrih/+7GRUIeXb4aFC/goPW2hl07qE0dfbwf7O6FIUR
      ENpSFe1WG+12G6PxeBqzT9MaN43EE1k7gZj5/Og/X01gyewTj3E4HB52KhqGZzdhr0zr43eK
      InsqheWmEMLmQ3B0K8OfPvLlVKjyZK2P/cB20hGQEAISElLJSq6EEhICQL/fRxAEaLfba1Hb
      tDEYldl1jKYxSZMjfuTXoa97CNn51wMo7cneSTdWtzmi5OAqUN3D6kv4uiOJJa4xBkmSIAxD
      ZwwSEU5snUCv10OaZ1Pjtwa1NUk395n3bCGEzfks0QcpJTY2NhbGmBDZshu8QOukVqvlGNeP
      lfKRKUaZGHrlAlB1aZnnuUt498fOatJ+zM/Ov7pDap3Ea6LKAEMAM1lv6xIy4/FoGo1aqzBB
      QoDCDkjNwq2CDOLHPgA1ugQAMGF8uBPAVUPzpI+/Afy8VCbeCOz4AeDiX/zEdzfYfRZV1Jjf
      Gs2Bw9b3K6fHOj+rPauiE9bBNo17l1JWQsSb3o+9oKPRCKaUat1ud4qjM4pUFJhMJjatMknc
      hlgU9FcZW8n42hhIdbRVITh/Wkrp4E8mjtlahSzCZ6NnDREkUEGxSARI7/+vm0EYIWA2bwLC
      VvnPfQpjVfSo2kL61cj4DxtzdbhLCIHJZFKBS1n35YCoSTaLb/vXzyMOZQjKOCZ2HNWZgshG
      mbKezd7idZDVf6epgd3Y4tCsr7O6WK93ypuQjXUWDoyXc6gDqz7Wy5pX7IRlpL+fkXXUpKRE
      WBr67PiyKaPFyvFLRLbECVfwCGRz+Zd5/EIQyG96OwAgvPhlRI/91v4boB7fw+EJ/tHt57IW
      ReFyapti1/3NMhqNkCQJOp2OXSRDzjvpM8m8RfaRCANCp9tpVHm4LuRwOFxoZB6GeI5YYnfa
      bURlIS+udMFj4Gv4N7wheQ6Z2ZPExtcEQeBsg/r7AMvFzrPas0w1hnWQVUWnjM6Ou06ns/Lz
      tdbufra84cH8NFYF+i0Ud3w3gmf+FHLw0uINwB5MXjgf6weqhVhdkgcsyuMnq/iqkq/jcmx9
      URTY2NjA7u4uhJgmnTMx0zgHE+ubpVMmLwp0O51KJGad2Ahbp+Tnd5LSJuG3ogQCAv2+LXrl
      L7rvLymKAkVRONWnzuCsEvpqUNNzlxpfqR7Ia1gDdl3PHY1H9qQVU/uirgov9D8JAbN1Kyhs
      o7j5OyH3Xmw2gnlR6sZuUBqZPtPzdUlZ2o+JS3gwzUMr2Pk0GAxw4sQJtNttxGGEVpwgCkMX
      Acp/pBAltl5K/tLA5koMze9t1Yp2u43Nzc216KI+KSkRqdCdjqx29Pt9ANMQAD712NlVj+Tk
      cXa7XRhjsLe3h36/79Crw4RACMGpn0fP/P46+bSWPN88d9C4LNElAFCjiwguPQYpBJIv/GsE
      Oxfmjw8CRXAe5tf/EYrPfBrjd/7D5hOAX8BndGAqwV10o4dwcEJz5sXw+0f+vM3AzMKnBYf7
      MjojhQSMFysTRlN1SxcIoxBxFC1Mg6x/3mq1MEkn0NqsTTUQwha4qtNgMLCbutygfnh0Xchw
      ZQS2B1jF9EseHjQ8g7H6oybf1qhj8usob7hXljiRQtrkKEaXWmcg2mftXN32bpju+cX3+spn
      gIvPAa+8DHrLD8yeAD5zLppwrt/CSRrsyPLju9lJ5m8I/zn1UyFNU2xvb1vGL0NtmZRSSKKp
      lLfBZtrWAVL75zCzEcybNS9mM9pWpTiOK5GaTKPRCHt7e85W4nE0SXQue+6HDfNmuRYpkAcl
      FpKc9LIfFL0MMZyuyrilygYDIC6/YOtNnbwLJqiGkMzYn/d9B3D2JuDVb4I5cbZZBaovjL+L
      60apv1F8Hb3u6Fn0HH+jCSGQZdkMNCpQjVo0ZNwmWAYNGY1G6Pf7GA6H2OvvWdh2jd5JPunm
      JadwSuWi5BqeK0Z76mVTDhOcd7WIx8drxAJyVeZnFVlAIHzpKYSDK5WMRTHcAX3oVyCGuzO/
      DS9/BcmXftXyR55CfPjXQB/6VYi3/SDor/0sCiFnVaAmyVR3TNVtA99g49qV/n3YU8yhDvw7
      /+/6f7MRzZ/76IlfRzNNU3T2qR/PaAtgDXQpJIRcXfXhWCUO6tsvc6yOqNUNuCiK0Ol03Akx
      9sJBFiUXHScSQmBjY8PFg63qYDTG9lYgEHDuFqAG5ZrOFsSP/32YYNbxZTZvQR52rAp+4VHQ
      wx8BANBH/2/gtvuBMFrOE+wza73+pI/KMKP6Ut/pamWUJ5GNfux2uzPoDm8YVq24DDg/M81S
      TLIUtsuN/R9X/p1HLHnr77NqbIohLvRrUJj9o1/rxHMZhmElB4AFDMOfztF3jesALUu8UTmc
      fBUisqmOtqOMAAURSKqZ5hoUxFDjS5CmGsulwy6KzVvtP5LOdPPELYCbizS9gN+Wps4sHMPO
      0og3gR9pyZuA49Z5w/CxHoahQ0H4RbXWbsE5GpLvq5Qqy6aYyvGnSm/jPMlIRC6tcN3ExZ5E
      WeP0oJuJmZr/8OnJraF8o96Prz8MHWUIRJ2aSrgflqwHPLV6v5hqDsHTH63cW+oUyZ/9M0Tf
      /PDce5mb7oH44f8e4m1/Dfgvfw4TCOt4vHjxIvk7lZ0wHLsx450FIY4TCKBSj4dtAD/xgY91
      TuQApovpO8/qAXNbW1vu+VLais9ZntvgKv/FpVVlTp08NbeaA0ORR0HzoN3D3IdBBJ4zVtnY
      oDysNCWapoIuqs25Tlq1qjNgeWJ7Z6csIymren8D3h/sPgNqn4IOm/sKaKPLTFQbucoFGGZE
      pw91sre3/r0hg0nZ5MEZpTUIjAfJsTZ1icDf11EnNp44dICIHPPX4bUoinDyxMnGE4A32FHW
      x1+HlAOmORTANGyCaRmEaxH5ORW5LqblYNZAdXuRT+tVM9aICON04my9uoPT8QwIQf95AECx
      eYtjfiFmQ2o0O3G1hZWNtplqjTAoJ4XX61MCgNbszMmhjXaBVnU1w1ed6jnCjHH79/a/Z9sA
      sInbfsQfX6eUcgkmdXhVa41+v98YRnBcyQcM/LDnVZGfQKlpiHitJ9oqREQu59k9q6xftI4T
      cVQmuyxq56pGFxE9+puQeqr7S6QILv0apNlxn+kydkgKG6YRR7ZnQ6/bq6pArI9yeAJL4brb
      mY8TN2Bja8LwNTOnhhQwxg7AN3iDIHDZXz502m7bhhLa2ERyxsB9w7vb7c6kDXJZkWtVNe0w
      5McF1YlPuXWhP+tS2QDrhIQQLsAuKsvarNrVBbBN0QfDAUJotB77AIobvwP5qXsar5Umh5Ee
      XAyCzJ+FCW8ClaUZC237QbSSBFJVVamKftDr9WwHcs9wZJ3er/igpHJ6ZXkn23QCclYalzXj
      lZTQZMBObCGE6wbpV0ZgCPXK9hWL8QMIghChh5g0JbbwWIOyM8u3E12tU2pd+j8RlS2Rphsz
      y7K1dHQnIkzSCf8D0ClgquEi0RMfgj7/AIruDRXmB2y4gw5vcffSHpgiG04TtwE4bY0NUX9R
      6ml3otz5vAlYJeFQAKWUVY88tYjLB5oy/IAH6Ov67XbbHX9ZnruMLxsFaJ+ztbWFdtDcOXye
      JD3OtKiE43F0ejmhVvt8FUPdJ0YDASAXAeihn5kJ5aCoA8jFodVCiLKyCCooZZ3cBuD4E6A5
      OaR+DHOMSSVdXdoyGMbMpjTyxqr7DriuZxiGrjhsmmeNlR7YqG4lrcpnHEu0iJlWoaPKu20K
      OmQ6TNzPURNLVE788QXiqs2smQZ15LEsIuaPobjpDZDZcxA4A+Jo12IEE7QhyCC68MdQLz0M
      ffZ+4I73ICPhkvfrJH1Lfm9vD4NBQ/GgJTBoIqp0T/edY/V7QVYrSmRZhslkYkuk5NncRtRK
      Beh1e5XEEs7n5Spu68b8+RnrVlP4vk3jZeffcdgAvlCxggszcfiLeiksS0S2oFiapU7iz4Nt
      5eTrkFf+XwiyDk6pJ0g++wsIRhcRXPkGwq/+NtSVJxA+/h8RXfqK80M1CZqg/iFHHvrG7DxH
      DEt/d4/abq3bA5XwCDLOZuDr0jyb249XSolTp0654DpmoNFohOFweCSMws/g5x/FvethJb5j
      7FqTMcZ13AxVc31UrnW0DuIyJ+GFRyHaXZjr7wQwi/vr1oMw8R0wwsKeRiVIH/pvYNqnEe4+
      B1EikwIEkVmBPhyP0AZcvVKmueHQJ06cwGQy2bc+JntD6wzoG8mOYctGEvwyBoQ4nDakLso6
      ozMkgK2trUoBW1Z7+v2+U6nWUdak8R3XHIczT/qz5D8ORGSbhwBAHM13aq3D8AUsqjRJU7v+
      oz3nYwqf+Tjk4GWk9/0IRD4GBTEIEiQ3Kr/XrdMQRsNsXA99/rWQV74Jc+J25Odf61DEwXBg
      K+4lCYIya21mtv1sLS7bN08FEgDm9RIIpKqUISci+1KAezmlFFQQoGD7o7xm+oBp44p2q125
      FyeVVCZB67XFzPhMOk+dW8czmHg+rrXKA5S2VqmKhkE4N5uAu2au43nD4chVmjP3f6edBzc/
      BJkPkXz6nyC/468iu+E73G9NWXpRCoH4K/8Xguc/i+KmtyJ94CdRhG3kBjAmdy2wOFV3oyyI
      HDQythBOJ+d/N9P8xRLCGh5FDU3y/1tJBeIY+SJv1vekxImtExUJzI4uPw1z8TgPR77atu5g
      NHYQNpUQudbERa7CIGzE9YWwye7rUn2KokCaTUM//OdlN5ebwWgUt74T5sTtld9yv98oCKAu
      PgaRD6EuP47xfe9z9UrZpiQAIE4yyhFFMQK/WkH9JRcd+1Z6zW+ODHBFYbgSedPfWVJe+HST
      ASsAnNg6Ubk/6/1+VYpFMNcqtGoQ2jziufUjZo/TBigKW8J93pg4w21dNBhNo3Uba3sSAUIi
      vfm7Kp8z8wsAhTHI7v/rCJ77NPJbvstV6HY2Jd+35JXxZAJDZFWgeUzMzMXlOmarqu3/cv4m
      8D3FgVIAwcb5BApSqhI+nd40SVpIyr5YTBxnzhuGK9KxD2NdTHQUKk/9/r6xe1yY3514DcKP
      N+66qlMDNp9jkk4sn4Aglizd4o9TSet3Gp98NeTp+1CU/iCHJnp8Jz07K89zC4POu7mvB8/D
      qpdZOC6rzfdWUrpYfq1t3JFNUJk6MCDEjIHFEZNZlrkq1H4HxePCRMsSM9RRnDKHJY6ZqY+J
      o3S73e5CWPGgzxqOR5CQCKVA5wv/EsHuM+57AUDqy5Bmmu2lipcR7H4YkoaAEAipQLj9BMJ0
      B0JKFBxWX9Mm/KhlYCpwGm0AABX9fx3xHULY+pEGtpMHJ3vbF7Xx3lZHKws4STHTtihNUwwG
      g4qkPw5S9Nsx/GIesSCpb4BOp+NUTb7uMGSIBSpcQTApJSAksnt/FKZzzl0r0zc76RsAACAA
      SURBVG9AXX4/AIXi/M+BglOQw89D9j8NRDdAypuQfOofQwwvASpE9uBPYnjuDTPwvV/GxxeU
      5fs0Sx9fMs27hg6YaMElTfwYdSlt+ewwKOvNgyCkwIbXpZ31/t3d3YrkaQrUuxbEYeP18OBv
      V6rHWkVl1Q2fDw4752QIRFVdn/+76N0AI73OQHoPoBygFMJYD7HpvQN664dgWvcg/ObvQwwv
      WrxfZwgf/yACyiu+JCmkK9Qlayq8Q4GarHw3YM9hM2sYLz8BzByMIEglkaW2isRwNJzq8AA0
      keuJy55eLjbFY+NY/2utOnA0J8/Rt0vq4jyq88M6wxyAcnPBngTj8XjuRhJCwHReC1AKiBgm
      uska5s8/guClh5G+6SGIfFLhQFFkQA1pzGHTaqWaLaQVqmD/nGA/XmVWui0n7XyprY1Gfzhw
      ENtoPHLXuPLpZQEuJr/UCFdUPg7Mz+Ph0HGm+qb4dqamro7roGwyQfjylxCn2zPfSaQIXvlN
      yL0/he6+DUX7DQAZSLMN6p2HPn0PjFDIb/9uUGg3J0Egv/2voJBVA90PvReVU6dMvvIvnFdt
      2A9VXomEgNYWu9fGQAW1DH8vTZLJLxLFEva4GI2sKnDhXyHETP2eOtrz7UBCCFed4ii6Oo4n
      Y2TDXbQe/yCKm94Kfft7qs8vXoEYPQYRvAjTezsgEgQ7H4IYfAHUfgDF7e+Byp4EdTYw+c7/
      CerS46DuWZiz98NMZusy8XNDKaEuPQckHdDmGbsx/AvmkTGmkfmXZUJXM8dobG5sopUkSLMU
      RaErodfM4H6sRlNh2OOgZhDZhhdc8AqYRo369gD/+yg6JB4VtVqttXl566SNwWA4BBAAb/k7
      oLAzc40Jr4M49WOgYBMGsVVzJk9BUAqMvgw1/qq1CSBAG98Ffef3IQgjUFHAmGp0AMp1kFJC
      PfYp4EO/AsRtyJ/8n2FO3zBVgZY1avwAsXlhEI0kBE6fPIVOu23LZkQxpBSI46o3UZYqjo/y
      +JGjPIZrSZzDy4lDvnrY9Lcf435cieFuLmlyFEQ07ehujEERdEFiloeIBHT7tdDhre535uQP
      wnReBwgFYazjTIAg9j4OpC+462aAGUa1hABeedE6ryZDYO8KAC8WaN4G8CFHXsyDIgBSyZmE
      CQtr2mCrKIxchxhTplcysc7PtYaOg/Rn4tpFPs0Lx/brex5HYinJiFunMyuZVyUubw5gYTkb
      iQJq5w9A4Wno9ptBAHR4C+jE9QjSfw6YaXM8AQMUuy7WrNVq2YzFsgCAO52JgDd+LzAZAZun
      QLfYFEvnCfbDfusogF+VrY6lLkOtpDVznEop0et2MZ6MEZY4Opc79GEs7qd7mI13VOR7tPmE
      YkN43ul0WOFxtaiO/B0FDce2HLytqVS22kUKOfg0dPftIIRQ+jKgdyH7nwSpLZjWgyBRaglC
      gtQmRHFlOlbZBsXXYzwZW/4UEq12jNBEmExsZQn2FGftHqL/4m9V3s9tgHrHFyY/OpRPg4Mu
      YJqmM8cqO9g6bds9sdvtoj/ow2jtTgO+jvOA/TFcK/Jh4clkYitNlyURm8bmTzYb88fBeVen
      erBhvTbpqpQXBbI0tW2s4L030UxMDUXXQ299HxCegimZX9IYwcVfA7Ln7DWQQHQd9Nb3IaOO
      U32kFEgnqeMhIYSrNs6dZYBy440etTaAb7A1+QT8o/sw0qGp6TPTJE2x299DmqZI4sQhRJWg
      OaUq3VauNfnz0TQmnsem+WTmOs6e43XZLL5tNBqPLPRYmxMjEhS9vwKC3WxanYZBC0X3O1HE
      97rr5OjPIbLnpri/CKBP/ShSdUtlvHsf/yLSF77lfhcVQ8gv/AqSJ34XAXk5KvllyJ0P24ww
      Zv6D1Nhf5uXjOHalMurfARbi3OvvwWiNwuTotDsIVOA6xPhS0i+Wey3JN86Z5jHLvA172JP0
      apEQYiXp75+STkXMi9Xel+rFDqxHWdO0ZI4QAp23vQ4Q03D76Kk/Qvj0R0EAzObNMGcfAACY
      8AbQdT8POS/2o4kOsmgME86D/4qiQH9o09W4s+B4Mm50vPDm9GuWXmtqCn3gsc3L9fWvO67G
      MHt+VwUbONaLyBYyOOiqCRhImhq71HkdKDjj/fu10Or0FKAxBkZrTNKJK8VJIJjueZs4H7RA
      rRPT3wMwomtPAJ/5/UWtlyJcdlKIaOEkMkO3yhqkbFAaY0AAOu1mBIJr5x+HTcBSvN7iiJ1h
      84jn8Ti8Q538qt2rEIe7sG1ZP7kl9SH0CDo4N+cOgBp+FnLwORTnfhYGMbTowZz9GajJN0Cq
      gyK6HYWfEFUz4vnP5Po3w/SuB4I2dOccVNaHHL6M4sSdIIhpUjwzoV8Iq+nF9iOW/PtVNBNC
      oN1qI1ABLr1y2dUQGk/GOHXiJISctUX4OL3WzMObNQiCKaznQbQ+quYTv8NxCeNg4vXigLd1
      UpZls3MhEpALS7Yf1U1L07oHUD0QLHqojYahBCJ+0BZj8G7JAtX9loxNlTQCQioUm7e574Ln
      PoXg6Y9Cf9f/AgpaEC+//DI1lTr3O74c5DhkN/p+nk8iQprZvFNjDHb3dp00DcMQJ0+cnEGO
      tNZ45ZVXrrkE9efFL2rLY/I9235JFVVz8h0X6na7a/P6cngzx0jt7e0tvN7Cnn3o6La51xBR
      Jb+8/l3l3wBMWcmCCEjCaoM+SQVEugednARQlkWpRzP6i3kQ1IdVn2UWeTQelS7x8tQII0gh
      keUZ8jzHeDJu7C7IJ9XVYKK6B9ofg+8HqF/jnwS+cLnWG7eJ/OYcqxKfiqz/L1OlT6vTgDrd
      +F2w+7TNE+jdOPf3M/PpeeBDFVbWCgCMCICS+QFMYVC+WT3m+yB6Px+ly6pKTLYNzsihPQAa
      YUJ+masBh7Jziw25ebQIGPABhnpAXHN07dFT/bnraGHq39vP0HPG6CHeVaW7SD79T5D82T+F
      ygf7jtFHM6WUZSNty8vhs5+AnEGRLDXmAxyGpJQHQmn8+eDJSbMUUsqyc/zi4LyjPAWY+X1j
      tq63d7vdxip6dfIRn7q39aDq5apU9/ivsw6R7+DzQx60MWWLIznTlFDlQ6iXHkZ+89tQb1ZE
      YRvm5J0gGYBULV6sTKklTN/HuKA3W7JTKYUgH4CCBMUt77A/bBCcQT0+5TBSyZ/YRUzpV5we
      T8Yzv+VrxuMJemWz6DqD8HFWFMVaPZVMvuT3P/OpXjx4P6oblr60uppUf491FbUCpnYPJyp1
      Oh1sb2+DQAgFQUDPMDl0CtkvA9RqwzAyxOTNfxuGCLnXJzrcuQh88SPAlZeBE2eB13838hPn
      ynpTZUi9kAiUQvTIb0Gffy3y698Itfv7EMndM7aG6w8wP+trMbGe2+l09kUReOG1MdjZ3XHP
      zLPZRndSKpw5fbpiCBMRtre3XQ8qtjXWeYRXcpWFqNhE/JxWq+VKsxxWr59nX+z33SrkC6ko
      ilym16qnkF+fiWHqPM9diEj8xO8CANK7vh8AIAWByBY/8PXzOkXP/xkgFdLr3ghNBuG3ngF+
      65/aynFM7R7wIz+P9NytEAJQAhDCntayGINUCBIBVPoEKDwDI7fsHMBAFi9Vw6H3c+A0ERG5
      +PH9Ng5vrkApbG1supdven1jNNIsdZPDzGljOtZfsJbBgLrtUa/aEMex6+O7Ci3auNoY5Loo
      696sz06Q0jaMyHWBMFquwfgylGUZhsOha4cLoNIyNr/1Xchvfdd0HONHIWBjdea9nxACcvtJ
      yJ0LkFIilBL4yAeqzA8Aoz7wkQ8gUgqdy4+h97F/gOiVrwIATNACCavi6fgux/z2AQBEhMCQ
      gSQ7CQeRBP4xfhhVRAiBkydO4tLlS7MgcElZlldUhabUw3lZbAclf/P7Rbr8kAxu+DeZTGbQ
      snWSTRIvJeMab2/x8bKBeVEgjlZXw4gISZIsLFFvakkvuvVg5RqJCUT+LdfYgu+b3/sjAKN+
      wz3g8ovNg3jlJYjRHpANILIhRDZsvq4ybgmtziCQQsLQtBaMP4BFzMUS8zB6ZMVaXyCB8iKv
      TFS90TRvwnVniQVBUOla4497NBodeRiDlBJyn3RtAoHbUi1LfsZaWLanWsUIJiJ3EoZhiE7H
      RvZyf69Fv6uQiEBBFQoVQiB69P2ADDF58G9ABKFznjXcEcLkyG58G/SZ18AkW3Ouqz1WlE3y
      pBCu2d0yxIzHxs5BGcJv/tBKWjPlKtwA651BfKlRbsz5CfvLE0t/30ivl4RhiI/HcS0gTCYL
      OcdQgVp6HMYYh5RYxi1W2sjG2N5b7EGeTCbI8/zAKnQwugh15SkYYU8J3/9UXP8GFNc9ZMec
      dIA7X9t8j3iM1uf/GSRp6OSEa5rBpPRlBKMv2OSZkiQKqPGX7QYQQkAJWQlDXmQMs95/4sSJ
      Q08iP8f1/GoID4iiqWpFsKHTMz0JsH/w2TJj8Tu1sGHv2xr17+uNI64WERFUGJTtSGNESYxm
      K6r6G9+esP6WeOWTLMtS9IcDEKZqEOv+cjJcSnvT7TPQW7dBAIie+wSSL/xryKwPgQL67L3I
      z7zGvYN4148Bd75uGj8hBORWC9F1CmL0CkTW7C8Q6dOQg89C0DTPhBDAtO5FkCQJgjDAkAvO
      SgXlOcLqxMyRJMlKzM/ZUUqVzoogQKvXAxlCUSbFtFtt94w0nUAbDVn2IvNVgHXo4cwcnLrp
      w618f/7Oz+yqY+tXBdos+V0IsVRetiFCEIaIwhBZnqNTxmCtQhzLpbXGYDiEFBKa0bMiA/32
      /wbx3p8Cnb7BfoaymHId74cACQUBg+DpP7VG790/AORfhtB90OZ73doEO1+HeOg+5G/9fmDn
      ErB1BrJFME/9EWjjRoRP/B70TXfAbNwLLTfdM3T7IZj2/YAI3NwRACKFQCmFQAXQJfynhUYr
      ablITR/t4MVeR7gsQ4jcvrLQuhIFynYCo1ODsguMUgokSwMcwjlXVmU8hgaBKYLBx3u9RwB3
      suRx8iZZJyS7aJxGa0zGY4RRhLKc3kJjWZawJPfGXdc4eI10oZHrbJo0FUSQP/izoI1T7vrw
      hc9Cbl9Aev9fr6qyegJhCuiwi+yBn4DauQCR7UFdfAb5nd9buVb0X4QcXgTd9VdBN94NwMbE
      FafvgRxfQfLZX7Al1NVWBVghSEAkUMPPgzpvrN5zd3eXiAh7/T33hVIKZ8+cdQaS1hp7e3tO
      cm9tba0U1NWkajBNT4bpBtvd23OtM31py78PpGosr970TGD2ZGMm50wtHy9ntMdXh3jheYyc
      8M6dNq8WWZSobik1UxhF6HY6azsteT65qfp+pPIBkI+g22crn0fPfMx2gHnNj7t7th7+JQQv
      fA6Tt/5d5KdeDQEDgRwQMYjMrEOtJEkGRsyf/yafg3jhxRepKHL/KgDA5saGDVcOAoxGo0re
      KzMFqwR+mMAqTiFgaoAyI+VFjivb247pbO6nqCRWA8DGxgbG43Gjb8CvcN2Effs+EN7kM70K
      PJXHFxQ8Zj5BjmOiixACvZ6V/OuAbokI470d5N/8MuiGO2Gi+Smv+47NFBCkYZR1eAbDlyAH
      LwHZGPkNbwaUQrD9HyEmT0Gf+RvQ6sw+d6zdHwYyf8FmgDVsHKl1UfZNarnAqCiKEKgA4/EY
      eZ4jTVMrIYvcxnYY41oUDQYD7OzsYG9vD8PhEGmaNkKIi8g3Qn1vsj2Z+o7pWO2JghCBmjbV
      YAdWU8iB8cY7z3HGY52XCzuP+blEo9+471qiQ/OIAwy5UvKqwYTGGGQPfwzmA/8Y9JkPuc/n
      qYD+Z/VrSAaO+VW6jeQT/yuiL/069Nl7QTIAiCDyy0CxXS2HsuQmlsXLCL71ryDzZh9CEIUR
      pJLodrq2rXxeOCnJjh8iQqFLe0AIiDiZ6bvKzOM3quPTgVWDg0gfIls7njeTc0iJaji0/9/s
      iUzTFLossaKEXDp4rvIcj5qYn9VDHyZt+u21Jk4lBay6so4TQEoJceurQfe/DeKuhxwGpfae
      hdAZ8q07ps/fuYDw6Y9h8rqftvDtU38MUgGysttLRS0xGmA4vqweTpAozvwkhO7DBGcAAlR2
      AXLn92C23gsT3wFhRjBiWsBX0vTfJrgOxfm/DROcb3wXcenSJeI+r+PJBKPxCEoqnDxhWxMN
      h0NkpevflIOKoghRePAEClZtwjBEEAYVJMI3etnBcmVne4ZxhbDRfrwB+fs4jmGIkKYT25eM
      nWS6Ku38/rv16EzuPuM/ixnaD/Zq8gJzCMVx6fLIVE92WUYQNBELOPb6DwaDxlDxup6t8gHk
      7rMoztxnT/j+84CQKLrXQz75COiRjwPv+QlQ1+brhttPAATkJ++aO5Zg9HnI7d+BOfH9oNa9
      kJd/E/r0T8CILiRSqEu/BnPqR0FyEwbzwRohBMTe3h4FQYA0s6rLpCxP0nK1VAiTLC0ZqYQK
      owjxITZAnThyUErpPMqsDm3v7ji1xpe+DpJUgbu+1WrZVjte7FAg1VwnGSM5TUzso168AXyo
      k3/XpG754zsOxD4WPoVXITZ2WQD4Fbv3o2DvWXuPjZvdZ0II4Pd+GfjzjwHv+3ug2x9Y+n4C
      BlK/AqNOgSAhzS6MB3tKswshAqhLvwG99R7o6M6Ze0jkkOOvWBQoCAKMJ2OkaQopFbqdjlNn
      Cl0gy/MSc+eSGRGiNYYiJ0niIhMLrbG9s40sy9yJ0cTAAoCQElEYYjJJUegCpjRGpVTodbt2
      804mTnrXqzbXyzUyErSo1k+9UcRxIz+yt9PpIIqiivReRUXjUJCDMD/ACC05D62DUNMRxMXn
      QDfeBVqA3lTu1YDkNJFEAbX3JzCdh6DVaQQ7T0EAyLemXSalIEg2EG3gGdButZxxRyDkZfNq
      Xu8gCCr6v29oHsYAtF7JacIDlUzYZFQK+K5ye+1oNLa9xkrjzhjj7sGLHYbhUoYfQ5t+Aosf
      s1SPDD1u1G63sbGxgc3NTZeXDdg1i2vNBg9D9bValqwLzD5bTbYRP/bvIUiD4jbMTa9qZH4B
      m0PgkzS7CC7/n1DpNxqvV9nT7jfq4lchtyOY4IwVdk/+IYIn/7AyB4YEAusBtvprq9WGKHV0
      l6AeBK6hnf1RVYecYdIDTnLdo6w5tlzYWCAhhGtyTPaBkMJmAxWFruj70utYzzX7fcPPV6ea
      jEF/A9TreB63UoZ16nQ67jRjAKOe47GOsfsgRxP54ET9cyICBTFM7wYI7gnXeA8g2P1DiMk3
      oU+/D1pah5rIX4IcfwVQPZjkVTWH2mUEF38JxdmfgY5uAyVbMGKqPaSv/ZuN45Js2AJAFIYI
      uJKXLhCEIXpery4A0EWBzIvS9KXksseTT/WEF/Y3GG1cGcG8KKD5JIKwWUKcuELTGkY+w/K9
      iKq1+dmAnYeG8Luwrn9c+pAtIl818z/z7Zd1wLNFUVTi/Pk5PsnxKwi+9UjlMzV+Bcnn/gWk
      yWGCNvT51yH+/L+EzOeFLRuI9AKQvWDhT/40fhWKcz8LvfXemfcxwRkU1/08THSrHevGzS6O
      SAgBoxIYNXt6VWqD7vb3sNvfs9h/ltlKDVLOFKvldERfugAHD0qrSyVOlSxKhteF1eslptlG
      eVHW1aSyzY33x2fUeRvTd4YtYujjzPB18iHYOmK2rrwF1v+rUjcHHvlYdQ2TkyjOPVj9bbyB
      4tZ3WVwfNt+3uPVdoGDKkNLkZbwQEF34KIJvXgTF77EwJwoI5FYpCm+BKWsFqfw5qLwslkuA
      VmdnIkElaYTP/Onc9y+jQaVtIibtonPn7izPUGgbG8SJyL1uD51WG3nZ4d0nfzMsQ/XyK1me
      VdohlVo/tNHOO8ubAh5syvdIkgRhGDobhhEQP4vsL0LfriaaTCYVJ2T9hF6VuDezT0aFwIPv
      nJnPGeksw1IaE+ILf4zw2Y9bWLRsjiF1iuSzv4Dw+U/b0+yZT0BdfgbBc9+AACG4/H4El34N
      ElNBLGkCdfn9UJffD0kT9651MkIhv+W7GteciBCEQQiprAQ1ZCBK/TeJY3TaHQyGAwRBgBNb
      J5Dl1hPcLut3KqVc4aPDTLQPzQlhg6r8Bsdc8rquVxIRNGnX6Aywm6nX60FK6ZIylFKV5Axm
      DD/e/1oRj2VdjrM8z53TknM01tXpRWs9N8nlIMJE5GOET3wIJBTyG9/iqj2QDKHP3Q+zcaMV
      VJs32+JV518La0JPIXj3XBHD9L7T/bcQQPLFf4P89veg2KomvhMRwlceh9m4ETrsus+SJIF4
      6aWXiJmBa0Nu7+4AALqdLsJSkhalxC90AQHh8nPZWDwM+U4aIsKV7SsYDqd6YRiGyL0ToYoC
      lQFpcmr4tdttxHGMMAyxt7fnIE3ficV/X8vyhES2MACBEMj1plXypgrDEOzgXPX+g+EAWbrY
      +F1ydAivPAEIifzELDYPlBuKCkidwgSdEvK26hGrPvMovPIN6I0bQWFn1tjVKUiGDnFSSqHd
      biNgBpFSYnNzE1xaot1qISjjXQDLjIwAjMpOH0mSIMsyVyVhFdXCGIMxG1hCWC+x5xmWDYvo
      x0Fya5/JZFKxSTicww+wOw6NNgxZtCvXRWPNHJ8KrSEEKijXPOL5yrJsLf19iWwJy/XMlEB+
      8u59r8qNAEQM1g8I4b4NeYWw9xZCILzwEeS3vbvCjxxvxNey41X6FwWBTRjodbpOsrLuzI6x
      0Wjk4uQHg4FrYh3H8YFzBPygOcFMX5I2GgFLr4aN5aM1LO04GpNzDXq9HuI4dpLQN4ivZeCa
      NlWHHFdqKLSeqQRBRLZ11AFtl3X5LIqimAknOSjtBzZEL3zWXSOEQKgUAqmgsj1Ez30KMh1C
      fPnjEEZD5gMIqlXuoALxI78BlQ9sSIvH/Gp0ceb53W53aiM2vXC73XaoQlEUGA6HKEq7II5j
      jMfjChzGqtDW1parDFCnJsMsTdNKUn2rlSDLUsvwoqFMi7CZY3EcI4mTxspmvo7P4dFNwXN1
      u+JqngZKSgiyjM/jYUYHwYERTKEKDnxi1TfRYd8vzTKsMjWCNOKv/QfoU69CfnY23EFOtoEg
      AkijxGSmXvedpxB+/T9Bd24Evfgk5D2vR/y5fwF97n6kd/2Au4cRAbL7fgyk4griJ4SAHF1C
      0T7j+MgXhkBZGhGYBnH5DMLxH1meux/u7e011u3kcnidTgeDwaARGfAzq/zfTXVzhTiKS6lY
      eqGFQNJqIYkTRHGEMJi68+ctqp/IUzfe/GQXfkdgPXHyy5IQAkoIyHITcF6DJlPtn+X990HH
      5gfA1XMs9iNbq3WMdquFLM9mihMchNT4CmT/RZiNm2a+EyDED/8y5OXHQW/+OeRnLXwqi7Gt
      4X/uQegTd0JHPYj3/jQMEYq7vg+mO9tXwJTM76s/RIT89H3QurCVT6R0/MUU8G6I49jBhWzw
      5nluY2zIIE0nGHPecEn+hHJIBd/LT6BxRmwNtgTgfApSSrSSBCg9vADQkjY187Dd4eM4LsM8
      PPisYfPMw9GPmuxGmKqNQUPPXOBwEpxArrXsQSNULSCiMBgNoYtibt6xHPdt5bWoOTxCCIHg
      yT9Acf0bkN/4FuvFNwXC5z6J/IY3g4IWzMk7IfIhqD1NdIkffT+C5z+Dydv+R2czsEDNzjVX
      huBritu/G2QM5O4l4PknQPd+h1Oj263ZyuUBw5mMmLTbbYfwuHh8Y5CXhqgvDRhx4AXiJBk/
      otLv3+RLId4UaZq6orpKqZnuMKvg2ELYXgVE0/o187LBjnML08JYv4eUCmpJKT6eTJDEiS0k
      cAioNQxsOMxcq2M4RPbYlxDdd7/bAPVIACJC9pr3gTANSZCTKwgf/6Dt19U9D33idhS3vAOF
      V7K8OP86oEhhus0x/IvIqcxPfxX0uT8A7ngQFCaIwgithuLN4uWXXyalFAqjEZee3yAIMBqP
      kGZZpWdvoGahQ/+IbgoZ8BEX/uMb1oBNZ1xnodY6ERF2d3cbbRMOtxBCXPWc3mWIyDaHAAC1
      5AYgIkAKbG5sQB0CZmXhdPnKKwBhJvkJAFAUoOEQYtOGIQshgIc/AvHad87NyxWmQPTE70Lf
      8CaY7jkkn/1FqIuPQp+6G5O3/A+2dj9fKxaH1ajJFVCQwATNSJcwBiIdwbQs7t/pdirqM1BW
      /TPG2HBnTCscDMokGN9rGoQBlOdd5T/+v5tUCD5hfASGUxg5THdnZwf9fv/I6v4z7LWIrkbP
      gcOQRUUC21l9SUa2gYIFruzsIC8OXsN0NBljb9BHoJQz1GcoCBzzA+Wme+jdC5PSIQAEMUy8
      CRgNMX7Ffjx6BdDTgsTufvNuIwTCJz6M4OU/n3sNSQnTsiHx3D2+iTfF888/TxAW5w+ULZeX
      5lXJ3263sdHbcF7W/SICFxFvMr/QFL8Uh/OuGrPuE7+01hq7u7sz1xtjnAc1jlcvFnUcyBiD
      ILRNyP2TeVmapKnr53tlZ7vcfMvPy37SmyncfgLBk38Eff5BZDe+DVJPED/y75De+1/BeCpR
      4zNIlxHCEsHeM6DkJHRULfnCgZDtdnsuCBCUI4YoQ0ezInfMLyDQarewtbnl8PVVJSUvCA/Q
      /zMaWQcbx7L70OkiAzXLMqfK1F++0+m4f88bT1PSzTyat8GOE0kpYfQs4rYMWXXVdnYvSqlc
      Z34JglmADAWXvgpqn0TRnt8FEgDyE3eheOPd0zklA1GMIZYo00keYECtUyA1G/YhhHD25bx5
      EC+++KLtOh9EZb1H65lk9YZL3jExUrQK+Yxd3wS+kQygMZWPJVr9FGm6brM8phc1bGNDfRmo
      MNfTPNiwwSY6TtRqtfZV/epUaI3haAglbanMPMsQPPYp0APvsOtDGsELn0F+09sXChVguoZB
      /3l771qvLwFAptsw8dZMtljjfckgfPYTKK5/w0zF6TpxrA87aP0x+XwWANMdLqVEN+lOu3uX
      WVb11kf1mPD6g+uV1JomqA5D8t++neDDpz4t2xeg3nlmHi0Lf1pH1TTn64zATgAAIABJREFU
      +DgzP9DcZ20/kkKg3WoBEDbkhQh49ZvdGhmhKszfxLD1f+vudY3PUoMXkXziH2Hylr8LfeL2
      Ge+8KkYwKvEyxghy8DKEWWzXEFFZOzWaWds6P0mCdUBxIJnW2tW/7/V6Tn/iHy2DlDQ1mlhE
      vCH4OWw4r1phwXcG7TeeZdQF23ongJKrN5ZwAXHXKBxjHhVaI00zjMc21RQEmKAahOaYP88x
      /thH93XWkVAVlYXJdM4ie/AnQa3TwEd/C3JcrTAn956D1FNhS0Ihfc37oOP9y5/P0/vrG0IK
      YausTSYTFEXhYmfqqYoslflE8KsN1JPLWX1ahdYRy8Lqk+8HWJWEEEtj8YtIkymbPx8d+nSY
      NYjCEEkco5Uk6JSOo3lEYYjWO981hbkf/SSkL8EnVxC+8njlN76gMSJAdv2bYYIEor0B8hxu
      8srL0CdfBV2DOReiQwDk3isOzFhGSEmOQkySBBsbG475WS/2IUv2qvIJAcD11GK1xJfg10JF
      4GOUw6IBrL2d0qrk1ETMGpjrpMOWQmHh1kpa+1b/8NVXvPpNML4PKDkBXavvEz39UYTPfqJ6
      DxXCvOl7QbFnr4z68PNB5LCK4AW7z0Cl1c/EYBv0wX8F6m8vLTxdkzzW++svd9yO6P2IpdHW
      1pZDdwaDwdpOgHlUaA1u0bnMxBdaA6CVy5TPo06nc6iEGD+jjAUeEUG+9BTo3C1OSktTwEgG
      EQXEs4+Dbr5nX34J9p4BhETRs7FB84IRhRDQzz8PefIERLsD8fXPg171Rre+Mh/aRBrhARFE
      CPIJkpOnEUXLvbvk9EFWb/w/327MH4YhNjY2sLW15Yyzq8H8tveWaQxnnkdKyqVq+x+GNjc3
      K/bPQYjVV1cah98lbgM+UvPoJ6toT2uKyiyyp4qNW1D0boIY7kJ87LchX3nR1ZutU/93Pojs
      G9+wJ+bdb5iiSi8/bKsAknCoHJFtE9I6dRbhAYq2ieFwSK1Wy8XlcCHcbycKw9B6+2pw13A4
      XMlptwwREQozDbkmomsGjxqyUO6JrRNref4i6HgRXJl/5TGoU6chz5+HyCbAV/4MuP1+0Oa0
      D5h47FPA7/wb4M3vRfGu9wHAjG0ljAEJYeuk+J+Thibb1kuJaYSBlBIbGxsHAk/EcDgkP3NI
      a23j/w8BoV1tamJ84OoxP2D15ayY1hQ9SsneRIao9N3Y94/iGFsbm/v8aj75TM3tTxdR00bw
      PxOPfw74D78IPPRu4L0/Nf08HQNf+yzojvtRtLdc8tMypycLm/DK11GcusedAEEQHLhEfVBP
      D2T4M03Tfbv9XW3yYVKuAFGnq6X2AHahu90upJQYjccYjUeuhMtVo3LtDJENJVmxA4zve1kK
      On70ExD3vgVGVqsFOrrlXuBtPwhx75utT8H//T1vRBG1IIUtXxI8/znkN711303gTvky9MF3
      bB1U6ImLFy8SQ591vZHr/V8rsnHpdlfX47ibjnhjjKtafDXINzSJCP1+/5qdnESE3kbvUFW7
      68QJTU2hL7R9BfLkqWmIitEV5q+TIAORTWDiqZYhhAA++L8D4yHw439/ei/SIBlAvPIizMlm
      51kTERFo+Aw+dyHGfedSPDuI8cBdN+7/Q5SeYM784qoQvJs4SeZqE4dgLFuIlogcPHu14E6u
      vMDEcPA1I4G1IUqVJhpEEEUBKgVQduEC4pNlqUIhFjI/AIsOfeZDEO/7exXIVL71B4AyU4vJ
      CGWf15sNhKuoVcYAxoC8LEbVvRnF3mfwYkY4fcfd+I1/+38guenVuK03xKVxC3F2CRd3dvHA
      69+BR7/4OcjeObzqvKr2jKmXvjtIGt26qNvtYnNzcyaGwyeG6NI0Rb/fx+7uLobD4VXF+o0x
      2N3ddQJiPB5ftWc3Ub004ipUgVBHI6RfeRSAnffooddPVeYv/cn+wummV0F8/9+aUWvMmZtg
      zt/W+BsTViFMIQTCZ6YV6MzODrInagVyhUIv0riwJ9Db+QZe0hs42Q4xlh2893vegY2zN+OH
      fvjd2Pnq13Dzm78HN8gMu2F36gfwya/XMxgMrooxCdgTp1UW3WoiY4ztA1DW/DwuFATBNQcN
      4iSeyaY7LHFk7n6n/35N6ZYhIQTE1z4L8uKNGp8FAzOnOZ4xxhZBu/I8Xhi1cPcNW/jEH/8e
      cOpVuPvmkzh/9hy+dfEiTp1sYXcH+MYjH4c6fy9uO9tp3gBxHLsw4kVQ2CKqB7ItkhR+aZP6
      dVyzn0vzHSfGPy5EROh0O0jig5cun3e/vb29oztRiYAsBaIYEAJy3IdpHd545w1wmNCPfZXG
      w/oE2IgCpllhTcR5u03fsyTiolvXsprbcSZDtrDxeDJBFEZor5heelS50fLCo8Cp6zD+2jex
      94H3Y/Nv/jSi1z60EvMD07zuzc3NA6uB+169ilOMY17mkRC2fWcT87OOzcz/nxl/Pklp0bIs
      z9AfzZakuerjKTLIJx+Z+Zxuux+0cRpU5KBCg4rZE4b2doE5EHbTfetRxAelwE9Udx8G1eZ1
      q9Aixp3XcZ6LcfldXurj+c8bYkpKKgsatBUgVp+blTdQEAE33sU3A7IMiGPbKYYI0Xe8Facf
      eBCywWehL12COnceIgwhX74AnDzv+hCTCiFurAbXMYTPRdAOqgaV5dGFiwCsx+Gv4lBivaxp
      Z3K2Tn2x2ItblEWx+BTxo1KvtYQ7bmSMwXg8tnDgmhJ15s1xuP1NBIMX5v5O9q8ATz4yxf3T
      FNlXH5t+LyWMAEy7bfX/Ky9BPvs1931wx50QXVvJAZ1NkN9JVIiKPwGYws+HrYTdaARzPMVR
      GUNRFKHT6TQyP3txfWZ38eZe4sy1Crc+rhTHsesKuSocyupn0ybwAi+bwyDK/2vaP3IyBJ56
      FIgT0M2vBoWxq4THpwOwfyGwSkJLWcan6btlaKERfFTh0E1oD2BTLesFrJpSI/lU4M9WTb45
      jsShHr43tqn5Bce+cE+wVcmf2+bvy793dpA9+QSi17+x+r37P7gxunTKpANx31sgJiOrJpWX
      iuEuxHNfB73qjTBEtphXWTEbAOQzXwXd8upp9xedo59qbHbb2NvdQbu3iUDa77LxAJe3+zh9
      7hwitURCzKIvD9ryaBmaB1fleV5xJrGUr2ecMbrEG+MvQhmTJppMJuj3+xiNRu5EFEI4X0mv
      13Mpq5y9t8qp6KuZ/KxFJLa2EL/hTYuvEQL4QrUzIxHBxC0b5cnPbm+A7nmTG8eM4N06A3gx
      VrvPXsC//90Pg2Dwy7/0i7i8Uzpv9RB/8OE/wjef/CYubU/j2Ir+RbxwpTmubeYEOKw1vSw1
      VYAjIozGIxcXTsaAhK1IxjqtlNItEk/QX0TJ30S+CsoOt83NzcYozFWIixmEYbhUIKT/fJb0
      vsQnIsg3vMeFOwghIL7yadB9b5050fk3tnL2NFNOCAGzeQZVCnH3mQhPfO1hdG97IwaXnsS/
      +50v4e5bT+Hka94CceFzuLTzDB5/WOM8LqF9VxvfSs/jT/7TJ3GlILz37a/G5z79NajTN82e
      AD4GvG4PME+uT0SESTpBfzBAmto+V1meuUZ9WTFViVi/9SvN/WWxAwqtXZU2vx3quogDD5sy
      AwEA43GzYo+ppJdSYvSHv19ZEz/Wh4hsrU5ObNn+JlTZRd6/Fws9lW4jePlLjc88f+vt+Ngn
      H8fr7thAPhnjprsfxO333IvLX/8yzt5+C7L+BMPdi3jq2ZftswG86vVvxzvf9ABE0MK7v+8H
      cdd1m7NGsF9LhjuurIOIbJ2WeqiD1hqD4RA7O9uNzMx9i5VUM6UB/7Iwv026KRz/hWGIk1sn
      ABzNHOR5jn6/X/kse/iLiO9/ADQnR1gI28yQANtiVwauutw8qmSULbimkncMgPIchRLYvdJH
      txMjihM8/Y2vIDlzGzbFAF+78DLuffBBXH76a0ipi1tvO43cRIApO8grASljZOl4dgP4GTX9
      fn+t1RS63e7MCTCZTHBl+8rcWBrhRV0KAahyYv8yEqf9BeUJyIKkCVFbhbjJ4DJUidLcuYi8
      d9JlyCkpEapwZmzLJr7Uie2DpjyQw4IhFRugrlKsM8CL4318sn3Bxo0wq4CACpTD3XhcnP20
      Lrz724mEsMXpOVxcSumQoVXmguFuAC4/fKnx5DnGn/7UtDTK7mUEm6dtOXfMgUIB0Bf/COL1
      3zN3E9Q3SGWTlWEPTcQ5LQeZi4oS6Xtm1w1/zkvSHo3Gzc8SQBhGMx09GDM+SAL6XzRiByI3
      I1m1gIFfAidN06UFn18XCADMLfdCCIlWGENJhTCYlf4GgHj99yy0J8RLT1X+jYc/AlnmOwej
      PcjBduNvubbsQeaisgF8Ce03sFuVmoxfJppTGIqo3vO7ftMyH9asXrB3nWRx7IM3tTsITSYT
      FyXr+wYO+7x5TCOEwORTn1goUWeQqP4ViCcfQRSEc1XV8ac+CZpjWxIR6Lrbq/f3y65LCczh
      DO5SdBCqqEBHBX/Od6pQYweSsGzUoZRyjLRoEQqjEeDoxr8sUenEcce1CipLReXmEAIQYvl6
      /3VyiSFlaXdgqhYdRg9WSlWK6HK+BREhef0bD7SxTO8kxMapuRIeAJK3NRfWZVWn/p3/b9Pe
      WPj8g6qCczlmHfp/p9NZ2Kw5b3iGEAJxFCFQCgTbOfH/b+/Kutw4rvNX1dXdABobyVm4SRQp
      iiIVR7J8JNqRbG126Fg+J97i2I9OTh7yH/ySH5Lk5CFHciw7jnJsS86RLFk2rdWkdoniOkOJ
      25AzA2CARqO7qvJQXY0G0Nh7hjM8/nTmUIMBGr3cqrp173e/O+ihSqlaN91s49cQMTWz7iuW
      4X/dxeHjIgiCqP+X9nunoYpTSqPoX0+eJjN+jUH3hEVryx1uSz/jxzsvg/LOoAv97My67vUi
      q4m7KMNozKNAj+ZsNotisZhcxK77clEKahgwwk4zPBSZ8oMAeSc/dFbbLMZPCIHNLFjMTFaP
      lupHD9pJoXMBOkuuB0Aa92HU2Z42qorfnwClFvGHtnEZDBhSOSalBO57DMJo67lyISCZ2b9L
      zYTnHkd0Vt03b9rwpy5m6df6SEoJP2h3MdRJGBJmfPX0qf3cQeCCbzql5aQBTykFMwyYYxav
      6w1v/CdJi3USxGklwOj8L5ktALcfTv6blMDhB6CfusgVIZxOrSJ6+RyoW+v9HABy5qTa4wmB
      1syeRE8h6TsnCYpET6K7r2xaxqS5/cVir+8mhQSjBiQ6XYc43KYbva5aqWbRcBs9dQFccEhC
      1k1rMy1Mspzbto1cLtfzTOIVd9O4P93HHGkAEAJp9BfOFWwIPbk8B9lHv5PM74tYdVKG9IhR
      ri9WHDMKpJTteoC0agCS0K/c0fO8qA0ro0bE/4g/AJVMYZHr4Ad+Yu1rN6X2VgIhpKMeOk4L
      n5axG6eZT4R6HXKCmnGRzasCl4TvFoXtiulqhvTumPtElz4FvbrQczwJObaKSTQA4hsoKdPT
      0tcYVqygSVjMMMBojABHCCih0eZRn1u/5hlSTr/B3IxwXRfVahWVSgWrq6tYW1tDo6tpeVoY
      95jSb0EmSMIQQrD68htDB1bz3KeovvFu8t/eeB20Vutkk87shpztFb0SQia28R0EQohygeIb
      4EliqcPQzz/VM1d81BJCYMTJVEIgELxjgDbc/ml6LjgCHsBKSMJsZWSz2ahISa8GWg0hzesc
      99mT8jZV1MI5/IULYAfujP6Wv+fg0M/b+/cgc2Bv4iqWOdorlSIJ7UkDqIlPjB0J832/dwCk
      Pfv388l08mVYJxjNDtSRAEJUczwC0i8fAiEFmn4LpsGSmzxvMehEor5Xk0qfrysIAY3lEqSU
      YHPb0frwA7DZOZCZmeh1LkSHXz8oTzQKeLh/NMdQhZZSwm26oN3hs7Rn/0xCHFkXtQDD1efU
      AKBgtB09McJoiq4YilYSovYLFrNACYHPfXh+65bcF6wXBj1/+tnpnsiNhqQUdNfuntetQ3eD
      7tjR+V45pIWr66pC+j4g3Af1GuGxpKofCUPDo64AAQ/gNpuqR1j8Q/1UlyeBaZp9/X89m4+6
      AdPvM8MmdSTcH+g9A9COFhiUwmImTGM0bdHNDimV9qnuh7yeA3pg/mfHbkhrvLar0jA6qr94
      yOlJqhaL3rO0BFHtbWquQZoNYDnk+YdsgnGEsZQbrfYtrPtDmrU5qiuki1O6VdsYY31puvHq
      oWmTN3rP0CVzGm6qN3dIdBzE6zIKhUJqk5QmwcVzC33fm5lOelHvW0xD7WXIA8cSB7Nx++0d
      v/ewQZ0SEOYV9KfHcXW54PCanrK/acsKLctCPp9HuVxGsVhENpuFbdsoFAoDjVvf9D/j5qHZ
      8hDobDwhG9JNJ77iJ5V0tt56o+M1GrRA3n2l/bk/vdAx1RG0M+OjolFvRO5zT4cYILkiSMeb
      k1wW3ZRY03RHcTlc173pisqTggseNcPbSPeKUopcLtfTK2FS+EEAzpUUuh+qbeuWQ+sBfd8G
      TXyyUgEphbN7GN0hhAKQoLF2SPFjBpwj7+ThhL2B+x5bSriuG62mUspkWRTGGDKZTE85pI7X
      681GPBavXaA4q3DQiWxEB5f1AgGJQrMb2TFeuxCtVityH6dpJm4yFkVOuOAQXECskyCuztGY
      Q2ZqbfwaXAgAInJxepmivYncpO/WP3GbjvIAPSdBlPxGfKTEN0damiNpORvFGG56M4kpcbM2
      1YZhdAQVpi6CkSKaVQlIONumc22EEDTfeA2Zo19qz+Rjto/SQQ9VG5L8WQmtDZW8cmnbjVPH
      4+g7bLRboyuEhBBRb65cLtfzZYNunD4BLW2yVV2fOPT1bvRgiH/fNN/d9DxUahVQQpGxbJiW
      icTijClg3X2kXS0mFe9rXAxzM3WJaLxEVkqlMKgRnUNog3EMXD+z2WxHwUU2mx27AFtnLuMn
      tNWhaRobjbQiP0BIHhQSzDTAOcfqyydh752HtWc+leNLKUFCAqSUEhhS1DTwWLUqwAVIudzz
      NyElslavxmxtaQmyUITpVuE7O5BnyRPGwAFgGAbK5XKkFDau7qSUG9eudKOxka1QNVzXhRAi
      qgOeZjOslZT154tH/7IjXp8mVOZ3ivslBGQQ9DhB2i23Eu7D9bNnEBy6B9suncWN+QzI8iJo
      dgdE7Tp27j+AS+c+QXHngeENMiZNvd/Kxn+zoCu3hm36RoHv+zBiLMtpjb/fHlD7/wbtPV+t
      ATpsEJNSube6TvN/DNYnA0wgpRokzcuncaHCQRuXUMyZCLwKrroZnLpwfHiDjEnxZ+NPH0ly
      8pOCxwiG00JKJdzF+2SRWYKBRhVf02zkpYQVcqS6MXv7Dhz/1bN49s3zmMsy3Hn3EcxuU/0I
      bDuDT899jCZnyXmAabAVZn6VPg/1RfsszfoBbaZ643jzwmkgpcTVpWswh9CH5coyaKkMqZNG
      JFnQSnerNygd2dXRKtAAJgol6yrAbaVyjxaQlBLVagU84JCEwqC9kUrOAxDazR9IAY1GY1Mb
      vxACPg8QDEv7SxUm5OG/mwFpbYJ5WIA0zOiCq1chY/eJfPIn0FqvJg+B1i8bIziyuACj4YJi
      /GSizilo/o+OMsYHp21nkM3lQEhvqaRiIRsgGKFJ3riwbRut1uZlYFJKwdD2P/u+j1AIEs4Y
      Y8avR4VO349ahMI5n9r3BxQbMxAcFHJg5tc8fCT2GYng4P0gCSx0lRAc77xouQxi28AEVBy9
      euvVMF7PrMOmmUxGycrr2mmafI2prwCMsQ590c0IVZzePj8ueKRnqaGzvOuZ6dWcqVGRlhw8
      Mxhmd8x0uHbd1+69+seOuLouNPKDIJI+jGNcWggplYEJ3TkhlKHbMf2oOK1erwiRmvagiW6i
      M+h7YopZSIjq/riZacj6gWlfXySouY3zUAkhEU9n1D2D9l27JwvdP23cGtdREclKhtQWtYnl
      Hc0p7PvaMuZKtKDtPw8yqPWAPqe4YWv3J06p1/SQiG49QkF9atO0JtDp+LIu39vM0DObNoJk
      nbrRj9VsNtUDYAYc24lej8sXxjlQjUYDjuMgn89jdXU18m09vwXGGCzbBmMGeJBuxGatvqbo
      KJeuA0UHJK8UJwLJ1UaWGECs67wMKROUkogEuJHwuaLNaKOWUiITThD96PaAotwMcnOBddgD
      6BlrK3B9hGybfBrENs2qBAFsy44SNN2Rm/hgEEKg6XmRtj5BKChmZ8LzG41gONZ5cg6DUHAa
      GhTanV2SDOZmJP3ioIR2iGPZlg3bzgxdHUcJxrC0hGW1wW9mtycOPfsD0xu/ZsmGR4YQEpVq
      Rc2mBgNjoeodNUANIwqt6oyuZZowi6WOIqH12kOpwaeiNtbuueg1IdNbZaaFkAJChFMTAUQo
      eWJQCoMxODknMbcQh9Y3HQaWhr48sDVm/Dh0xZiMMSIngfaf4/cw8qu54qp7sYkobuCGYcBk
      DJQqf7YRNnsuJYiIpYWAc0gpANKe1fUEINF/AmsP7+khpYxoHEmFOAQEAhwGNWAYDE4uB0La
      K1GS69Nt7KPunZiuMZ12ABQKhbE6i2wGUEI6DGFcJBm/fh1INiYtCNAd+iSEqD2IBNYadbBw
      5aChDEhabkjAg8SwrqJE9we/fBl8dQXmkXvG+j69UdXtXOOGqUtp48EGvX8UUrbbpI5gzN1d
      RvWxhoFptmYaGcbNHPpMG3Hj1w9IRyriAyC+KgzMusZmsPgkQoiSRNlW6mVCToLAD1T972oN
      Rnn0ECzdtQt0166h79Pxeb3CdbtzcXdRDwzTNHtW0CTT7Y7QdePTT97G6+8t4KEnvoZd27J4
      4dmnsUx24jt/+1WsfXYKz/32Ley/94vYmyOYu+tOsOaKCoOmlbm9FRQYRoEQop1g6Zr5dWPr
      eN/dafZZesOcFvSMXH3j3dSfFWMMhUIB2Ww2UhfpnhSTuntqt3CUsHP3yhndHynxznuf4OHH
      HkEhwwCxCqP4F/jOk4/BBNBoeXjkb76L1o1zuHDmAnwAreXP1ADQ0Yg/YzRoqcaO16QcmNGd
      xoh1uj+NgZANdZq2HXs4tYFFKYXjOHAcp8OQ0x5gOmfSPek0Gg0IKfG1r38VJ195EWcuLQPS
      RlBbwE/+8xmscoC7FfzqFz+Dx2ZghctLxWNqAGz1Gt2NBg27u+jZR8/0/QwqXpM6CRhjqUxQ
      uhov7fxMPp/vyMZ2u4L9ziUNaIq432rh/RNvYtX1YTEDgevC5S2QjAObAnZxDt/+/g9w7JEv
      IOc4oACa9Wq7Tapt23Cc6XRfhBCoVCqJF57GRnuzQPv/2t0ZxaCSZq9sNgvLVN1wAh6AcxG6
      V4paLENXqlwsjd39MAlu00VtbU3xf6QM+22Njn5s0FKp1LHh1JNC3LXphpbFGXVfFD+HJLRa
      rYlKbSMHLY1ZoW/UIxztt4JOJxeqc82ohq83yP0enB0atgrL6gJvdZ+itH9KfCTGGCAlJAEq
      L7+JwhfuGXkjTAjB0rMvYvZbX1WZ2NCVCoIArut2lMrqa9ATRFI0RlGSeceq0e2FBEGAVqul
      ciWh7E4/Rqx+H4Coc84oq120AmiBq2kgpUSlUgkfnKrYkUJE8eWNlBBJAzLMFCv3RV2Tfqij
      IB726+cTm6aJYqEAyOQNYpoQQmClsgrfD2DFqCqUUqy89Aa2PX50oMHIpgcj164Lj783SZlZ
      rwTawPV3AUDTa0JKJc3i+z4IIZHBdvv48QRhuVxOvD9BEKBWqynym2FEYfluaZ9uRCtAWjdd
      u1PVtVq0DG4lo9cIeBDSbtXvcWZkErofXHz57+f+aerBIFch/t5pQQhBqVBEo9GA6zWj8zIA
      5O+5c+jnzbwT9ZKOG/ege0MpRbPZxFqjrigeodtXDYXXDEo76Bfd9yBuP7rYSucU4qWQjDGU
      SiWsra1FIgyO48AwDNTr9f735MqVK9IwDJRKpdQKLhThqo5qrRo9XIO21Zy3AmS4gnUzRPuJ
      0yYZefwBJSVzspkMnJwzUsKmXq9vuWx7HHpvo6kYhmFoVauxFDaEENFe1bKsjnune1vEFUgK
      hQJc1+1776j20dJMYhFCkHccFPJKxJWOeZGbASozSkBBlN88JIqTNHvrfUJSltjJ5eDknLHo
      zr9+5t/x01/8EjfWhkfsri4uwhvxuNcWPsQzz/wCVyvqE6+99Es8/ZNncPbyavtNQRONFocI
      mnC94QU8Z999FU8/9TTePXMZp0+fUisNNVSGO8aHGtcu9N4BQEeORa8O3fI7tVpt4MTBKKV9
      25hOA0IICvk88tJBtVrdknkGvZmjlEab33FckST3T00OeWQzmbHdw9Lcfhws27hy/Qaun/kU
      XmYHVhbeQ2Hf/dhjV/HKybM49uSTWHz7FfzuzUV88++/jrmsjYVra9iRZ/Cq1/DmR5fw2Jfu
      B3dmICpLmN2zG8vLFdx99224cWMN8yUbwi7irx85jPcvXETz4kmcrWZwOHsRP32b4+heFyfP
      5/EPP3oCJ35/HEe+9ASwuoDLqy3csW8/bNqEXZzHim/i+9//Ll763XEYJMDBg4c67sGkIITA
      87yo/7TOLI9KfusG037SekBvbLai8QOd6m96RfD8wVnzpKxm/N+84yAzApU3CQun30Xt9s/h
      0GwT75xewoP3crQOPIT6wutYcPJo1hbx6m9fhjV/Fx57MA+5fBlvVltYWW5gZymPLKmhcv0s
      Plg8CN44DdN0sHPPbnAe4NTZS7jj7jyk3I6VK4t4q+Zjbu9eXF9YweKJU7j3R9/CsT234d7C
      Rcx/bh8unfg1zl6to/HeR7Bri3j02JM48dZJmFTiwYd2wV/+DD995jQO3vtXWLv6ydjXOuwe
      N5vNSCNJB3GGbXiTQNPKMCYhCBWHbwXo1WBYz4F4L9/uGb6QLyCbySYav95zDIJBJW5cWwKH
      hUNHjmD73F6ce/15rPAyELjIlWZQ3LYTN079ASdOf4addx3AtYsT1xR1AAAIN0lEQVTL+Pzu
      HHh5Dl7TRb48CydbQM69hvxt+wEAa5UVcN/H9eUGAAKLGVhevopmIOG6HmZ2zcPIbMeHf3ge
      1z0bJ1/6NbK7DsCxTeydm8EdBw8jn81hzqzAL+wDI0Bp7134wQ9/iKOfu2Osss9xoGvPfd+H
      53kTVSGSSqUik3r4Tgsp5VD/azMgHmaL3zwt5poU2tOFL90dzPXsD/TyohzHQT7Xm2iUUrV+
      bXoeeKCo0EkDJNVNsF/Fy8c/xENf+SIsIx3XVwQtHD/+Gh788peRMfoM8NAT4IJHWqHTuEOm
      acKyLNTrdTiOo5reMTYWIzl1XSCNm0GNHkRD7oeA81BhrLMfbStQG01G+8tBcs7h8/a+oDvs
      qf+fMYZysZQYaGh6Hqq1anQM/d5ut3QQ1WKzgHMeRc0abqOvGK4ucWRdgrZqBQzdRQynQRcK
      BdTr9WhgaebsOATEdeEvc8431Pi1YQRhA4ZhGWed4OIxLn/AOcxwNgxilWKDBlN8gxxwXdLY
      fnD62HknOdrT8n1Ua1UUCwXUG41INr7huih0JSU3O9VcC1URopp6I7ayxqGeVZ9cCgCh7z06
      76POKcUnhqQmLuMym1MNzOsT3SglaF3WGHAe4+YnG2xEXAslUHRMOv6AlGBW+DpGVywT4bEp
      SDT76O/LZXOwQvmO7vNpuI3I4EsFJSWjm5NsJQRBgLV6I+I7+YE/sMouZC/3JA4NQtv9CuK6
      pbKt+5P2KpjKtKIpqZoVuZHQsw6AHjcmfn5ccC1fBqBPxpESmMxUrYJGNH4e7gf0Owkh8AMf
      zFCGnO8jJy+EgOd50ay1Vq+jVCxtSb6U5kY1XBdCcPCAT3Qdig/V+zkJCREW7geCp0qpSWUF
      kFJGjTRGxbTCqEA4a4QzK6O9xi+lqsvlUsCybTg5Z+B3WsxEwVHUXi5FWD8rQ80gHp53e/XQ
      2U0Rlji2/FaYpFFLdanQP79iGAZy2XajEdMyt1SmPI6MbcPJZSMC3HrTX9JcBVJZAeLsv1Eh
      pQCXZKhw0TBQQkH6+pQyYlNCAg23d19CCIGTy8FrtaLU+vbyNjQ9D/VGPXKtIo57+Bn9enTN
      BJELwzlHIV8Yml9Rq0MoqpXJbknOFNDOmuvnMGggk4gVMIaKnP4MISBuC9RJTyYmtZ3VuA/P
      oEY4k043W8QjAHFwISKpDyklvFY7HxEPfeayOWTsDHLZXHQcwzDg5HKwTBOr1Upk5Nr424NB
      AgSghqp7ndm+A8xgaLgN2CPUWOus8K2AKDFlDr/ucROvRqxCeOn545j55qMgKa2WqRyl1WqN
      7fvrmDmXo7tCkTsSVyxOYFIyxlSxNVPF1rrwuhuWZcHJ5VRcP6EslDGG7du2RzKFGjxyidpS
      fOVSGcxQlVt2QsueWxEt34fbVESzoFnHfz/9r/j5r15Ew+8NQV64cD72m8AfX/g/VPw+Kzf3
      8bvnfo7fvHICAoBoruKX//Mz/OYPJ5F//EHw8N6e+tPv8dRTT+Hk6UsAgCtXPoPrjlbZeOn8
      BbQwxQqgN2+GYUzc9E4pfqk4vDGCPEk8HBYdI2Em8H0/CqlJqSQLGWNRkz49aIqFAqrVasRH
      NwwDxVgiSkUmCApOHsv+SnQOMuymaFCKbeVt8AMfGcvuUYS4laGfhZRqIHBf4OB9DyHj13D+
      k4/w4Qcf4ejjXwe/cQbX61kQvgzBJW4/cACoXsQNn+Di4hVUDB/zsyUs1z2cPvE6nP2fx/0H
      ZkGcWThoQgDwrp5Ds7APRw/fjuee/g+4Ow/he984hhUPePTRR5EvlfHRW6/gNyfO4ttPPILS
      znmcP7OAfXNFNLw6Xn3rYzx+7HHcWDwPlxXBr32C1z9Ywve+J2H8+Mc//pdJadA65DnppiTi
      2JDRDWYU7jygViU/Qa3OMi1wweHkcmAG6+CKM8Yitbb4dzTDDb5lWZGOjYZtWXDCDK9eQZJb
      9txaiPR8KFWq0e4anvvf/8Iam8GegoGFq1dx8XIF7soVPPDQQ3jx5/8GdtsDODBfwvuvvoL3
      zpzDpQowazVx9foSvNVFvPDONTRdF4cPbMe5j0+hEhAUynOY2b0PBb6M198+g8N33YUHHnkY
      eUawePpDLK1UQSSw1GK49+BuWADOfvA2LtYlatUqDL6GKxc/xqVmDsvX63j4kIUz/n4cmTXB
      4U3uAsXT/sOgozFJUFTp0Y7Tz/i7B6CaicOa2jCSY1mWWrV8tdn1mh6q1Wrkwmipcl1oES90
      ty0L+bwDZrAoqUWpgaRxv1m6ySQhCK/JD390bcMkE5hhGGGpq1RaQ4aFx5/8O3znG0/ApoBh
      5zG/I499B4/AsQw8/I0fIF9bRCMQQGEX/vGf/hn37cvjyN17cX5J4NCR+7C3AOyanwdAcH25
      hmBtDZIS1K8t4rWTH0BaGcyWDDz//G/RDADHZrh06RLqwkD14kd47b1zKO/ciSt1gq8cKsFw
      doCIAJniDLYXcjh0+C6w0l5cf/8FvLdwDdlsbnIqxChcH53e1tLa61ESKYRq9hDPAXDO0Qp8
      CM5BQoO2bRsmM9H0mmoTJtoP3bKsnvav3YXdUioBMSHV6rAaln5alo1tpVLk/mzW2V9IieWV
      ZbV3iVW5EUJgMoZioRi5iKMOYi3su1Zfg8Um71h5M8EmFcXSsf9h74kzHPk69FqJZqEgiOQD
      o1I/xtTDloDX9CBM9fB934cZbli1RmW/fUx3tlh1U6eQQqUzW56HSrUKM6QqbFYjEEIg8APE
      aQi63rnVakFwAcoMCC6QiXWjT0IQBNFA91qe4kTJjbv2DtasCs1NXHD1/2mZ7VT1zCq7AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='79' name='Figure e-2 ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
